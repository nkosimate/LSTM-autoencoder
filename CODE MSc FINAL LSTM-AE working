{"cells":[{"cell_type":"markdown","metadata":{"id":"H6KyGcAIq-oT"},"source":["# Data Preparation and Visualisation\n","\n"]},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0IAb-W1NEPWa","outputId":"b87beacc-f29f-4fb5-d006-22108313eb22","executionInfo":{"status":"ok","timestamp":1724249358381,"user_tz":-60,"elapsed":22076,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/gdrive')"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"S9Ab2yuhErV7","executionInfo":{"status":"ok","timestamp":1724249358791,"user_tz":-60,"elapsed":420,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}}},"outputs":[],"source":["import io\n","import pandas as pd\n","from google.colab import files"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":705},"id":"TPbFdcEoIHpg","outputId":"8c422921-fcfe-4425-dc57-1e5f5e1ca705","executionInfo":{"status":"ok","timestamp":1724249368320,"user_tz":-60,"elapsed":9532,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-3-159681e8e53c>:1: DtypeWarning: Columns (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv('/content/gdrive/MyDrive/20230930_040000_QDQD_483014_0.csv')\n"]},{"output_type":"execute_result","data":{"text/plain":["                                  TIME  WOB (SURFACE)  \\\n","0         yyyy-MM-dd\"T\"HH:mm:ss.fffzzz                 klbf   \n","1        2023-09-30T07:00:00.000+03:00               10.500   \n","2        2023-09-30T07:00:00.387+03:00              -999.25   \n","3        2023-09-30T07:00:01.000+03:00               10.500   \n","4        2023-09-30T07:00:02.000+03:00               10.500   \n","...                                ...                  ...   \n","1229642  2023-10-12T05:45:26.000+03:00                  0.0   \n","1229643  2023-10-12T05:45:27.000+03:00                  0.0   \n","1229644  2023-10-12T05:45:28.000+03:00                  0.0   \n","1229645  2023-10-12T05:45:29.000+03:00                  0.0   \n","1229646  2023-10-12T05:45:30.000+03:00                  0.0   \n","\n","         BIT DEPTH (SURFACE)  DEPTH (SURFACE)  \\\n","0                               ft                     ft   \n","1                         8736.230               8736.230   \n","2                          -999.25                -999.25   \n","3                         8736.230               8736.230   \n","4                         8736.230               8736.230   \n","...                            ...                    ...   \n","1229642                    9773.62                9773.62   \n","1229643                    9773.62                9773.62   \n","1229644                    9773.64                9773.64   \n","1229645                    9773.64                9773.64   \n","1229646                    9773.64                9773.64   \n","\n","         ROP (SURFACE)  BLOCK POSITION (SURFACE)  \\\n","0                       ft/h                              ft   \n","1                      0.000                          59.200   \n","2                    -999.25                         -999.25   \n","3                      0.000                          59.200   \n","4                      0.000                          59.200   \n","...                      ...                             ...   \n","1229642                 23.0                            45.9   \n","1229643                 23.0                            45.9   \n","1229644                 23.0                            45.8   \n","1229645                 23.0                            45.8   \n","1229646                 22.9                            45.8   \n","\n","         RPM (SURFACE)  HOOKLOAD (SURFACE)  \\\n","0                        RPM                      klbf   \n","1                     40.001                   249.700   \n","2                    -999.25                   -999.25   \n","3                     40.001                   249.700   \n","4                     40.001                   249.700   \n","...                      ...                       ...   \n","1229642               39.001                     204.6   \n","1229643               38.001                     204.6   \n","1229644               38.001                     205.3   \n","1229645               39.001                     205.3   \n","1229646               39.001                     205.3   \n","\n","         TORQUE (SURFACE)  SPP (SURFACE)  \\\n","0                       kft.lbf                  psi   \n","1                         2.913             1439.600   \n","2                       -999.25              -999.25   \n","3                         3.447             1451.200   \n","4                         3.010             1442.500   \n","...                         ...                  ...   \n","1229642                   1.481               2068.8   \n","1229643                   2.427               2068.8   \n","1229644                   2.354               2087.4   \n","1229645                    1.65               2076.8   \n","1229646                   1.966               2076.8   \n","\n","         FLOW OUT (SURFACE)  FLOW IN (SURFACE)  \\\n","0                               %                USgal/min   \n","1                          17.000                  450.000   \n","2                         -999.25                  -999.25   \n","3                          18.000                  449.000   \n","4                          18.000                  450.000   \n","...                           ...                      ...   \n","1229642                      15.0                    221.0   \n","1229643                      15.0                    221.0   \n","1229644                      16.0                    221.0   \n","1229645                      15.0                    221.0   \n","1229646                      15.0                    222.0   \n","\n","         TTV2 (SURFACE)  TTV (SURFACE)  TVA (SURFACE)  \\\n","0                         bbl                  bbl                  bbl   \n","1                       0.900               33.100              365.700   \n","2                     -999.25              -999.25              -999.25   \n","3                       0.900               33.100              366.000   \n","4                       0.900               33.200              365.500   \n","...                       ...                  ...                  ...   \n","1229642                  38.7                  2.0                159.6   \n","1229643                  38.3                  2.0                159.6   \n","1229644                  39.0                  2.1                159.5   \n","1229645                  38.5                  1.9                159.6   \n","1229646                  37.3                  2.2                159.6   \n","\n","         TVT (SURFACE)  MLOG LAG DEPTH  SPM3 (SURFACE)  \\\n","0                        bbl                    in                   SPM   \n","1                    365.700               -999.25                62.000   \n","2                    -999.25            104604.744               -999.25   \n","3                    366.000               -999.25                62.000   \n","4                    365.500               -999.25                62.000   \n","...                      ...                   ...                   ...   \n","1229642                159.6               -999.25                  61.0   \n","1229643                159.6               -999.25                  61.0   \n","1229644                159.5               -999.25                  61.0   \n","1229645                159.6               -999.25                  61.0   \n","1229646                159.6               -999.25                  62.0   \n","\n","         SPM2 (SURFACE)  SPM1 (SURFACE)  \n","0                         SPM                   SPM  \n","1                       0.000                63.000  \n","2                     -999.25               -999.25  \n","3                       0.000                62.000  \n","4                       0.000                63.000  \n","...                       ...                   ...  \n","1229642                   0.0                   0.0  \n","1229643                   0.0                   0.0  \n","1229644                   0.0                   0.0  \n","1229645                   0.0                   0.0  \n","1229646                   0.0                   0.0  \n","\n","[1229647 rows x 20 columns]"],"text/html":["\n","  <div id=\"df-cb1ea99e-f9c0-46ed-af0f-849f41c11a2e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TIME</th>\n","      <th> WOB (SURFACE)</th>\n","      <th> BIT DEPTH (SURFACE)</th>\n","      <th> DEPTH (SURFACE)</th>\n","      <th> ROP (SURFACE)</th>\n","      <th> BLOCK POSITION (SURFACE)</th>\n","      <th> RPM (SURFACE)</th>\n","      <th> HOOKLOAD (SURFACE)</th>\n","      <th> TORQUE (SURFACE)</th>\n","      <th> SPP (SURFACE)</th>\n","      <th> FLOW OUT (SURFACE)</th>\n","      <th> FLOW IN (SURFACE)</th>\n","      <th> TTV2 (SURFACE)</th>\n","      <th> TTV (SURFACE)</th>\n","      <th> TVA (SURFACE)</th>\n","      <th> TVT (SURFACE)</th>\n","      <th> MLOG LAG DEPTH</th>\n","      <th> SPM3 (SURFACE)</th>\n","      <th> SPM2 (SURFACE)</th>\n","      <th> SPM1 (SURFACE)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>yyyy-MM-dd\"T\"HH:mm:ss.fffzzz</td>\n","      <td>klbf</td>\n","      <td>ft</td>\n","      <td>ft</td>\n","      <td>ft/h</td>\n","      <td>ft</td>\n","      <td>RPM</td>\n","      <td>klbf</td>\n","      <td>kft.lbf</td>\n","      <td>psi</td>\n","      <td>%</td>\n","      <td>USgal/min</td>\n","      <td>bbl</td>\n","      <td>bbl</td>\n","      <td>bbl</td>\n","      <td>bbl</td>\n","      <td>in</td>\n","      <td>SPM</td>\n","      <td>SPM</td>\n","      <td>SPM</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-09-30T07:00:00.000+03:00</td>\n","      <td>10.500</td>\n","      <td>8736.230</td>\n","      <td>8736.230</td>\n","      <td>0.000</td>\n","      <td>59.200</td>\n","      <td>40.001</td>\n","      <td>249.700</td>\n","      <td>2.913</td>\n","      <td>1439.600</td>\n","      <td>17.000</td>\n","      <td>450.000</td>\n","      <td>0.900</td>\n","      <td>33.100</td>\n","      <td>365.700</td>\n","      <td>365.700</td>\n","      <td>-999.25</td>\n","      <td>62.000</td>\n","      <td>0.000</td>\n","      <td>63.000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-09-30T07:00:00.387+03:00</td>\n","      <td>-999.25</td>\n","      <td>-999.25</td>\n","      <td>-999.25</td>\n","      <td>-999.25</td>\n","      <td>-999.25</td>\n","      <td>-999.25</td>\n","      <td>-999.25</td>\n","      <td>-999.25</td>\n","      <td>-999.25</td>\n","      <td>-999.25</td>\n","      <td>-999.25</td>\n","      <td>-999.25</td>\n","      <td>-999.25</td>\n","      <td>-999.25</td>\n","      <td>-999.25</td>\n","      <td>104604.744</td>\n","      <td>-999.25</td>\n","      <td>-999.25</td>\n","      <td>-999.25</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-09-30T07:00:01.000+03:00</td>\n","      <td>10.500</td>\n","      <td>8736.230</td>\n","      <td>8736.230</td>\n","      <td>0.000</td>\n","      <td>59.200</td>\n","      <td>40.001</td>\n","      <td>249.700</td>\n","      <td>3.447</td>\n","      <td>1451.200</td>\n","      <td>18.000</td>\n","      <td>449.000</td>\n","      <td>0.900</td>\n","      <td>33.100</td>\n","      <td>366.000</td>\n","      <td>366.000</td>\n","      <td>-999.25</td>\n","      <td>62.000</td>\n","      <td>0.000</td>\n","      <td>62.000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-09-30T07:00:02.000+03:00</td>\n","      <td>10.500</td>\n","      <td>8736.230</td>\n","      <td>8736.230</td>\n","      <td>0.000</td>\n","      <td>59.200</td>\n","      <td>40.001</td>\n","      <td>249.700</td>\n","      <td>3.010</td>\n","      <td>1442.500</td>\n","      <td>18.000</td>\n","      <td>450.000</td>\n","      <td>0.900</td>\n","      <td>33.200</td>\n","      <td>365.500</td>\n","      <td>365.500</td>\n","      <td>-999.25</td>\n","      <td>62.000</td>\n","      <td>0.000</td>\n","      <td>63.000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1229642</th>\n","      <td>2023-10-12T05:45:26.000+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.62</td>\n","      <td>9773.62</td>\n","      <td>23.0</td>\n","      <td>45.9</td>\n","      <td>39.001</td>\n","      <td>204.6</td>\n","      <td>1.481</td>\n","      <td>2068.8</td>\n","      <td>15.0</td>\n","      <td>221.0</td>\n","      <td>38.7</td>\n","      <td>2.0</td>\n","      <td>159.6</td>\n","      <td>159.6</td>\n","      <td>-999.25</td>\n","      <td>61.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1229643</th>\n","      <td>2023-10-12T05:45:27.000+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.62</td>\n","      <td>9773.62</td>\n","      <td>23.0</td>\n","      <td>45.9</td>\n","      <td>38.001</td>\n","      <td>204.6</td>\n","      <td>2.427</td>\n","      <td>2068.8</td>\n","      <td>15.0</td>\n","      <td>221.0</td>\n","      <td>38.3</td>\n","      <td>2.0</td>\n","      <td>159.6</td>\n","      <td>159.6</td>\n","      <td>-999.25</td>\n","      <td>61.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1229644</th>\n","      <td>2023-10-12T05:45:28.000+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.64</td>\n","      <td>9773.64</td>\n","      <td>23.0</td>\n","      <td>45.8</td>\n","      <td>38.001</td>\n","      <td>205.3</td>\n","      <td>2.354</td>\n","      <td>2087.4</td>\n","      <td>16.0</td>\n","      <td>221.0</td>\n","      <td>39.0</td>\n","      <td>2.1</td>\n","      <td>159.5</td>\n","      <td>159.5</td>\n","      <td>-999.25</td>\n","      <td>61.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1229645</th>\n","      <td>2023-10-12T05:45:29.000+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.64</td>\n","      <td>9773.64</td>\n","      <td>23.0</td>\n","      <td>45.8</td>\n","      <td>39.001</td>\n","      <td>205.3</td>\n","      <td>1.65</td>\n","      <td>2076.8</td>\n","      <td>15.0</td>\n","      <td>221.0</td>\n","      <td>38.5</td>\n","      <td>1.9</td>\n","      <td>159.6</td>\n","      <td>159.6</td>\n","      <td>-999.25</td>\n","      <td>61.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1229646</th>\n","      <td>2023-10-12T05:45:30.000+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.64</td>\n","      <td>9773.64</td>\n","      <td>22.9</td>\n","      <td>45.8</td>\n","      <td>39.001</td>\n","      <td>205.3</td>\n","      <td>1.966</td>\n","      <td>2076.8</td>\n","      <td>15.0</td>\n","      <td>222.0</td>\n","      <td>37.3</td>\n","      <td>2.2</td>\n","      <td>159.6</td>\n","      <td>159.6</td>\n","      <td>-999.25</td>\n","      <td>62.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1229647 rows × 20 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb1ea99e-f9c0-46ed-af0f-849f41c11a2e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cb1ea99e-f9c0-46ed-af0f-849f41c11a2e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cb1ea99e-f9c0-46ed-af0f-849f41c11a2e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7469d074-f1b1-419d-8ad1-98a2b7ea87a1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7469d074-f1b1-419d-8ad1-98a2b7ea87a1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7469d074-f1b1-419d-8ad1-98a2b7ea87a1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e3f7dd9c-a4bf-470a-98f9-6d6b4a05fa63\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e3f7dd9c-a4bf-470a-98f9-6d6b4a05fa63 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":3}],"source":["df = pd.read_csv('/content/gdrive/MyDrive/20230930_040000_QDQD_483014_0.csv')\n","df"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"T1fKLVQxrTo5","executionInfo":{"status":"ok","timestamp":1724249368789,"user_tz":-60,"elapsed":473,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}}},"outputs":[],"source":["df = df.drop([0])\n","#df = df.drop(df.columns[[20,21]], axis=1)"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0xQQ--TlJ4Ob","outputId":"a336f4f1-9be8-4cce-8fac-1954659b0949","executionInfo":{"status":"ok","timestamp":1724249368789,"user_tz":-60,"elapsed":5,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["TIME                               object\n"," WOB (SURFACE)               object\n"," BIT DEPTH (SURFACE)         object\n"," DEPTH (SURFACE)             object\n"," ROP (SURFACE)               object\n"," BLOCK POSITION (SURFACE)    object\n"," RPM (SURFACE)               object\n"," HOOKLOAD (SURFACE)          object\n"," TORQUE (SURFACE)            object\n"," SPP (SURFACE)               object\n"," FLOW OUT (SURFACE)          object\n"," FLOW IN (SURFACE)           object\n"," TTV2 (SURFACE)              object\n"," TTV (SURFACE)               object\n"," TVA (SURFACE)               object\n"," TVT (SURFACE)               object\n"," MLOG LAG DEPTH              object\n"," SPM3 (SURFACE)              object\n"," SPM2 (SURFACE)              object\n"," SPM1 (SURFACE)              object\n","dtype: object\n"]}],"source":["# View data types\n","print(df.dtypes)"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3QcrqpkwW5ry","outputId":"96f3476e-3f23-40e9-924b-169d222f0f47","executionInfo":{"status":"ok","timestamp":1724249387049,"user_tz":-60,"elapsed":18263,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["object\n","datetime64[ns, UTC+03:00]\n"]}],"source":["# Check the type of 'time' column\n","print(df['TIME'].dtype)\n","# Convert TIME column to datetime64[ns, UTC+03:00]\n","df['TIME'] = pd.to_datetime(df['TIME']).dt.tz_convert('UTC+03:00')\n","# Verify the conversion\n","print(df['TIME'].dtype)"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zR4BiXjjK6NQ","outputId":"092bc37f-aa63-490e-d8a6-e7c33ef5654f","executionInfo":{"status":"ok","timestamp":1724249394601,"user_tz":-60,"elapsed":7556,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["TIME                               datetime64[ns, UTC+03:00]\n"," WOB (SURFACE)                                  object\n"," BIT DEPTH (SURFACE)                            object\n"," DEPTH (SURFACE)                                object\n"," ROP (SURFACE)                                  object\n"," BLOCK POSITION (SURFACE)                       object\n"," RPM (SURFACE)                                  object\n"," HOOKLOAD (SURFACE)                             object\n"," TORQUE (SURFACE)                               object\n"," SPP (SURFACE)                                  object\n"," FLOW OUT (SURFACE)                             object\n"," FLOW IN (SURFACE)                              object\n"," TTV2 (SURFACE)                                 object\n"," TTV (SURFACE)                                  object\n"," TVA (SURFACE)                                  object\n"," TVT (SURFACE)                                  object\n"," MLOG LAG DEPTH                                 object\n"," SPM3 (SURFACE)                                 object\n"," SPM2 (SURFACE)                                 object\n"," SPM1 (SURFACE)                                 object\n","dtype: object\n"]}],"source":["#Replace spaces or empty strings with NaN\n","import numpy as np\n","df.replace(r'^\\s*$', np.nan, regex=True, inplace=True)\n","# View data types\n","print(df.dtypes)"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oZFKHe-e2MVR","outputId":"2401babb-d778-4fe9-bac5-eec47b681b38","executionInfo":{"status":"ok","timestamp":1724249398292,"user_tz":-60,"elapsed":3710,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["TIME                               datetime64[ns, UTC+03:00]\n"," WOB (SURFACE)                                 float64\n"," BIT DEPTH (SURFACE)                           float64\n"," DEPTH (SURFACE)                               float64\n"," ROP (SURFACE)                                 float64\n"," BLOCK POSITION (SURFACE)                      float64\n"," RPM (SURFACE)                                 float64\n"," HOOKLOAD (SURFACE)                            float64\n"," TORQUE (SURFACE)                              float64\n"," SPP (SURFACE)                                 float64\n"," FLOW OUT (SURFACE)                            float64\n"," FLOW IN (SURFACE)                             float64\n"," TTV2 (SURFACE)                                float64\n"," TTV (SURFACE)                                 float64\n"," TVA (SURFACE)                                 float64\n"," TVT (SURFACE)                                 float64\n"," MLOG LAG DEPTH                                float64\n"," SPM3 (SURFACE)                                float64\n"," SPM2 (SURFACE)                                float64\n"," SPM1 (SURFACE)                                float64\n","dtype: object\n"]}],"source":["# List of columns to convert from object to float\n","columns_to_convert = [\n","    \" WOB (SURFACE)\",\n","    \" BIT DEPTH (SURFACE)\",\n","    \" DEPTH (SURFACE)\",\n","    \" ROP (SURFACE)\",\n","    \" BLOCK POSITION (SURFACE)\",\n","    \" RPM (SURFACE)\",\n","    \" HOOKLOAD (SURFACE)\",\n","    \" TORQUE (SURFACE)\",\n","    \" SPP (SURFACE)\",\n","    \" FLOW OUT (SURFACE)\",\n","    \" FLOW IN (SURFACE)\",\n","    \" TTV2 (SURFACE)\",\n","    \" TTV (SURFACE)\",\n","    \" TVA (SURFACE)\",\n","    \" TVT (SURFACE)\",\n","    \" MLOG LAG DEPTH\",\n","    \" SPM3 (SURFACE)\",\n","    \" SPM2 (SURFACE)\",\n","    \" SPM1 (SURFACE)\"\n","]\n","\n","# Convert each column to float\n","for col in columns_to_convert:\n","    df[col] = pd.to_numeric(df[col], errors='coerce')\n","\n","# Verify the conversion\n","print(df.dtypes)\n"]},{"cell_type":"code","execution_count":40,"metadata":{"id":"TnK959ABdTr3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724250266496,"user_tz":-60,"elapsed":312,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"79068976-9eb9-4ff1-c727-e59fdcc02490"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-40-e458118d9f27>:3: FutureWarning: DataFrame.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n","  df2.fillna(method ='bfill',inplace = True)\n","<ipython-input-40-e458118d9f27>:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df2.fillna(method ='bfill',inplace = True)\n"]}],"source":["#Create new dataframe object without \"Heartbeat\" data\n","df2 = df[df[' DEPTH (SURFACE)']>=0]\n","df2.fillna(method ='bfill',inplace = True)"]},{"cell_type":"code","execution_count":35,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"84Tq6jeWsKsf","outputId":"9c06696f-07cb-49f8-a218-15e4e973cc8f","executionInfo":{"status":"ok","timestamp":1724250182252,"user_tz":-60,"elapsed":5,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-35-e68be8c6d952>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df2['GAIN LOSS'] = df2[' TVA (SURFACE)'].diff()\n","<ipython-input-35-e68be8c6d952>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df2['AVERAGE ROP'] = df2[' ROP (SURFACE)'].expanding().mean()\n"]}],"source":["# Calculate gain/loss as the difference between consecutive mud volume measurements\n","df2['GAIN LOSS'] = df2[' TVA (SURFACE)'].diff()\n","\n","# Calculate the cumulative average ROP\n","df2['AVERAGE ROP'] = df2[' ROP (SURFACE)'].expanding().mean()\n"]},{"cell_type":"code","execution_count":36,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":794},"id":"6ElzHTg5sZ2a","outputId":"b2b21747-86c0-4ae9-a114-37dec066daef","executionInfo":{"status":"ok","timestamp":1724250183630,"user_tz":-60,"elapsed":861,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-36-7d45be607170>:1: FutureWarning: DataFrame.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n","  df2.fillna(method='bfill', inplace=True)\n","<ipython-input-36-7d45be607170>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df2.fillna(method='bfill', inplace=True)\n"]},{"output_type":"execute_result","data":{"text/plain":["                             TIME   WOB (SURFACE)  \\\n","1       2023-09-30 07:00:00+03:00                  10.5   \n","3       2023-09-30 07:00:01+03:00                  10.5   \n","4       2023-09-30 07:00:02+03:00                  10.5   \n","5       2023-09-30 07:00:03+03:00                  10.0   \n","6       2023-09-30 07:00:04+03:00                  10.3   \n","...                           ...                   ...   \n","1229642 2023-10-12 05:45:26+03:00                   0.0   \n","1229643 2023-10-12 05:45:27+03:00                   0.0   \n","1229644 2023-10-12 05:45:28+03:00                   0.0   \n","1229645 2023-10-12 05:45:29+03:00                   0.0   \n","1229646 2023-10-12 05:45:30+03:00                   0.0   \n","\n","          BIT DEPTH (SURFACE)   DEPTH (SURFACE)  \\\n","1                           8736.23                 8736.23   \n","3                           8736.23                 8736.23   \n","4                           8736.23                 8736.23   \n","5                           8736.23                 8736.23   \n","6                           8736.23                 8736.23   \n","...                             ...                     ...   \n","1229642                     9773.62                 9773.62   \n","1229643                     9773.62                 9773.62   \n","1229644                     9773.64                 9773.64   \n","1229645                     9773.64                 9773.64   \n","1229646                     9773.64                 9773.64   \n","\n","          ROP (SURFACE)   BLOCK POSITION (SURFACE)  \\\n","1                         0.0                             59.2   \n","3                         0.0                             59.2   \n","4                         0.0                             59.2   \n","5                         0.0                             59.2   \n","6                         0.0                             59.2   \n","...                       ...                              ...   \n","1229642                  23.0                             45.9   \n","1229643                  23.0                             45.9   \n","1229644                  23.0                             45.8   \n","1229645                  23.0                             45.8   \n","1229646                  22.9                             45.8   \n","\n","          RPM (SURFACE)   HOOKLOAD (SURFACE)  \\\n","1                      40.001                      249.7   \n","3                      40.001                      249.7   \n","4                      40.001                      249.7   \n","5                      40.001                      250.3   \n","6                      40.001                      249.7   \n","...                       ...                        ...   \n","1229642                39.001                      204.6   \n","1229643                38.001                      204.6   \n","1229644                38.001                      205.3   \n","1229645                39.001                      205.3   \n","1229646                39.001                      205.3   \n","\n","          TORQUE (SURFACE)   SPP (SURFACE)  ...  \\\n","1                          2.913                1439.6  ...   \n","3                          3.447                1451.2  ...   \n","4                          3.010                1442.5  ...   \n","5                          2.791                1439.6  ...   \n","6                          2.864                1442.5  ...   \n","...                          ...                   ...  ...   \n","1229642                    1.481                2068.8  ...   \n","1229643                    2.427                2068.8  ...   \n","1229644                    2.354                2087.4  ...   \n","1229645                    1.650                2076.8  ...   \n","1229646                    1.966                2076.8  ...   \n","\n","          TTV2 (SURFACE)   TTV (SURFACE)   TVA (SURFACE)  \\\n","1                          0.9                  33.1                 365.7   \n","3                          0.9                  33.1                 366.0   \n","4                          0.9                  33.2                 365.5   \n","5                          0.9                  33.2                 365.8   \n","6                          0.9                  33.1                 366.0   \n","...                        ...                   ...                   ...   \n","1229642                   38.7                   2.0                 159.6   \n","1229643                   38.3                   2.0                 159.6   \n","1229644                   39.0                   2.1                 159.5   \n","1229645                   38.5                   1.9                 159.6   \n","1229646                   37.3                   2.2                 159.6   \n","\n","          TVT (SURFACE)   MLOG LAG DEPTH   SPM3 (SURFACE)  \\\n","1                       365.7                -999.25                   62.0   \n","3                       366.0                -999.25                   62.0   \n","4                       365.5                -999.25                   62.0   \n","5                       365.8                -999.25                   62.0   \n","6                       366.0                -999.25                   62.0   \n","...                       ...                    ...                    ...   \n","1229642                 159.6                -999.25                   61.0   \n","1229643                 159.6                -999.25                   61.0   \n","1229644                 159.5                -999.25                   61.0   \n","1229645                 159.6                -999.25                   61.0   \n","1229646                 159.6                -999.25                   62.0   \n","\n","          SPM2 (SURFACE)   SPM1 (SURFACE)  GAIN LOSS  AVERAGE ROP  \n","1                          0.0                   63.0        0.3     0.000000  \n","3                          0.0                   62.0        0.3     0.000000  \n","4                          0.0                   63.0       -0.5     0.000000  \n","5                          0.0                   63.0        0.3     0.000000  \n","6                          0.0                   63.0        0.2     0.000000  \n","...                        ...                    ...        ...          ...  \n","1229642                    0.0                    0.0       -0.7     8.698883  \n","1229643                    0.0                    0.0        0.0     8.698897  \n","1229644                    0.0                    0.0       -0.1     8.698910  \n","1229645                    0.0                    0.0        0.1     8.698924  \n","1229646                    0.0                    0.0        0.0     8.698938  \n","\n","[1032248 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-3a4e4584-e6b1-4e5a-8c1d-41fca447c5ac\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TIME</th>\n","      <th> WOB (SURFACE)</th>\n","      <th> BIT DEPTH (SURFACE)</th>\n","      <th> DEPTH (SURFACE)</th>\n","      <th> ROP (SURFACE)</th>\n","      <th> BLOCK POSITION (SURFACE)</th>\n","      <th> RPM (SURFACE)</th>\n","      <th> HOOKLOAD (SURFACE)</th>\n","      <th> TORQUE (SURFACE)</th>\n","      <th> SPP (SURFACE)</th>\n","      <th>...</th>\n","      <th> TTV2 (SURFACE)</th>\n","      <th> TTV (SURFACE)</th>\n","      <th> TVA (SURFACE)</th>\n","      <th> TVT (SURFACE)</th>\n","      <th> MLOG LAG DEPTH</th>\n","      <th> SPM3 (SURFACE)</th>\n","      <th> SPM2 (SURFACE)</th>\n","      <th> SPM1 (SURFACE)</th>\n","      <th>GAIN LOSS</th>\n","      <th>AVERAGE ROP</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-09-30 07:00:00+03:00</td>\n","      <td>10.5</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>249.7</td>\n","      <td>2.913</td>\n","      <td>1439.6</td>\n","      <td>...</td>\n","      <td>0.9</td>\n","      <td>33.1</td>\n","      <td>365.7</td>\n","      <td>365.7</td>\n","      <td>-999.25</td>\n","      <td>62.0</td>\n","      <td>0.0</td>\n","      <td>63.0</td>\n","      <td>0.3</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-09-30 07:00:01+03:00</td>\n","      <td>10.5</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>249.7</td>\n","      <td>3.447</td>\n","      <td>1451.2</td>\n","      <td>...</td>\n","      <td>0.9</td>\n","      <td>33.1</td>\n","      <td>366.0</td>\n","      <td>366.0</td>\n","      <td>-999.25</td>\n","      <td>62.0</td>\n","      <td>0.0</td>\n","      <td>62.0</td>\n","      <td>0.3</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-09-30 07:00:02+03:00</td>\n","      <td>10.5</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>249.7</td>\n","      <td>3.010</td>\n","      <td>1442.5</td>\n","      <td>...</td>\n","      <td>0.9</td>\n","      <td>33.2</td>\n","      <td>365.5</td>\n","      <td>365.5</td>\n","      <td>-999.25</td>\n","      <td>62.0</td>\n","      <td>0.0</td>\n","      <td>63.0</td>\n","      <td>-0.5</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2023-09-30 07:00:03+03:00</td>\n","      <td>10.0</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>250.3</td>\n","      <td>2.791</td>\n","      <td>1439.6</td>\n","      <td>...</td>\n","      <td>0.9</td>\n","      <td>33.2</td>\n","      <td>365.8</td>\n","      <td>365.8</td>\n","      <td>-999.25</td>\n","      <td>62.0</td>\n","      <td>0.0</td>\n","      <td>63.0</td>\n","      <td>0.3</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2023-09-30 07:00:04+03:00</td>\n","      <td>10.3</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>249.7</td>\n","      <td>2.864</td>\n","      <td>1442.5</td>\n","      <td>...</td>\n","      <td>0.9</td>\n","      <td>33.1</td>\n","      <td>366.0</td>\n","      <td>366.0</td>\n","      <td>-999.25</td>\n","      <td>62.0</td>\n","      <td>0.0</td>\n","      <td>63.0</td>\n","      <td>0.2</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1229642</th>\n","      <td>2023-10-12 05:45:26+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.62</td>\n","      <td>9773.62</td>\n","      <td>23.0</td>\n","      <td>45.9</td>\n","      <td>39.001</td>\n","      <td>204.6</td>\n","      <td>1.481</td>\n","      <td>2068.8</td>\n","      <td>...</td>\n","      <td>38.7</td>\n","      <td>2.0</td>\n","      <td>159.6</td>\n","      <td>159.6</td>\n","      <td>-999.25</td>\n","      <td>61.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>-0.7</td>\n","      <td>8.698883</td>\n","    </tr>\n","    <tr>\n","      <th>1229643</th>\n","      <td>2023-10-12 05:45:27+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.62</td>\n","      <td>9773.62</td>\n","      <td>23.0</td>\n","      <td>45.9</td>\n","      <td>38.001</td>\n","      <td>204.6</td>\n","      <td>2.427</td>\n","      <td>2068.8</td>\n","      <td>...</td>\n","      <td>38.3</td>\n","      <td>2.0</td>\n","      <td>159.6</td>\n","      <td>159.6</td>\n","      <td>-999.25</td>\n","      <td>61.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8.698897</td>\n","    </tr>\n","    <tr>\n","      <th>1229644</th>\n","      <td>2023-10-12 05:45:28+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.64</td>\n","      <td>9773.64</td>\n","      <td>23.0</td>\n","      <td>45.8</td>\n","      <td>38.001</td>\n","      <td>205.3</td>\n","      <td>2.354</td>\n","      <td>2087.4</td>\n","      <td>...</td>\n","      <td>39.0</td>\n","      <td>2.1</td>\n","      <td>159.5</td>\n","      <td>159.5</td>\n","      <td>-999.25</td>\n","      <td>61.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>-0.1</td>\n","      <td>8.698910</td>\n","    </tr>\n","    <tr>\n","      <th>1229645</th>\n","      <td>2023-10-12 05:45:29+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.64</td>\n","      <td>9773.64</td>\n","      <td>23.0</td>\n","      <td>45.8</td>\n","      <td>39.001</td>\n","      <td>205.3</td>\n","      <td>1.650</td>\n","      <td>2076.8</td>\n","      <td>...</td>\n","      <td>38.5</td>\n","      <td>1.9</td>\n","      <td>159.6</td>\n","      <td>159.6</td>\n","      <td>-999.25</td>\n","      <td>61.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.1</td>\n","      <td>8.698924</td>\n","    </tr>\n","    <tr>\n","      <th>1229646</th>\n","      <td>2023-10-12 05:45:30+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.64</td>\n","      <td>9773.64</td>\n","      <td>22.9</td>\n","      <td>45.8</td>\n","      <td>39.001</td>\n","      <td>205.3</td>\n","      <td>1.966</td>\n","      <td>2076.8</td>\n","      <td>...</td>\n","      <td>37.3</td>\n","      <td>2.2</td>\n","      <td>159.6</td>\n","      <td>159.6</td>\n","      <td>-999.25</td>\n","      <td>62.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8.698938</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1032248 rows × 22 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3a4e4584-e6b1-4e5a-8c1d-41fca447c5ac')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3a4e4584-e6b1-4e5a-8c1d-41fca447c5ac button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3a4e4584-e6b1-4e5a-8c1d-41fca447c5ac');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-25f75425-4d72-4e95-b015-0f3c1ae27f35\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-25f75425-4d72-4e95-b015-0f3c1ae27f35')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-25f75425-4d72-4e95-b015-0f3c1ae27f35 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f10e292c-f477-496e-b58d-a8e71900f30d\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df2')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f10e292c-f477-496e-b58d-a8e71900f30d button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df2');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2"}},"metadata":{},"execution_count":36}],"source":["df2.fillna(method='bfill', inplace=True)\n","df2"]},{"cell_type":"code","execution_count":37,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":669},"id":"P6lVc1z0ogTZ","outputId":"c08817da-ba30-44c4-9cca-6550b017060b","executionInfo":{"status":"ok","timestamp":1724250186943,"user_tz":-60,"elapsed":482,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                             TIME   WOB (SURFACE)  \\\n","1       2023-09-30 07:00:00+03:00                  10.5   \n","3       2023-09-30 07:00:01+03:00                  10.5   \n","4       2023-09-30 07:00:02+03:00                  10.5   \n","5       2023-09-30 07:00:03+03:00                  10.0   \n","6       2023-09-30 07:00:04+03:00                  10.3   \n","...                           ...                   ...   \n","1229642 2023-10-12 05:45:26+03:00                   0.0   \n","1229643 2023-10-12 05:45:27+03:00                   0.0   \n","1229644 2023-10-12 05:45:28+03:00                   0.0   \n","1229645 2023-10-12 05:45:29+03:00                   0.0   \n","1229646 2023-10-12 05:45:30+03:00                   0.0   \n","\n","          BIT DEPTH (SURFACE)   DEPTH (SURFACE)  \\\n","1                           8736.23                 8736.23   \n","3                           8736.23                 8736.23   \n","4                           8736.23                 8736.23   \n","5                           8736.23                 8736.23   \n","6                           8736.23                 8736.23   \n","...                             ...                     ...   \n","1229642                     9773.62                 9773.62   \n","1229643                     9773.62                 9773.62   \n","1229644                     9773.64                 9773.64   \n","1229645                     9773.64                 9773.64   \n","1229646                     9773.64                 9773.64   \n","\n","          ROP (SURFACE)   BLOCK POSITION (SURFACE)  \\\n","1                         0.0                             59.2   \n","3                         0.0                             59.2   \n","4                         0.0                             59.2   \n","5                         0.0                             59.2   \n","6                         0.0                             59.2   \n","...                       ...                              ...   \n","1229642                  23.0                             45.9   \n","1229643                  23.0                             45.9   \n","1229644                  23.0                             45.8   \n","1229645                  23.0                             45.8   \n","1229646                  22.9                             45.8   \n","\n","          RPM (SURFACE)   HOOKLOAD (SURFACE)  \\\n","1                      40.001                      249.7   \n","3                      40.001                      249.7   \n","4                      40.001                      249.7   \n","5                      40.001                      250.3   \n","6                      40.001                      249.7   \n","...                       ...                        ...   \n","1229642                39.001                      204.6   \n","1229643                38.001                      204.6   \n","1229644                38.001                      205.3   \n","1229645                39.001                      205.3   \n","1229646                39.001                      205.3   \n","\n","          TORQUE (SURFACE)   SPP (SURFACE)  \\\n","1                          2.913                1439.6   \n","3                          3.447                1451.2   \n","4                          3.010                1442.5   \n","5                          2.791                1439.6   \n","6                          2.864                1442.5   \n","...                          ...                   ...   \n","1229642                    1.481                2068.8   \n","1229643                    2.427                2068.8   \n","1229644                    2.354                2087.4   \n","1229645                    1.650                2076.8   \n","1229646                    1.966                2076.8   \n","\n","          FLOW OUT (SURFACE)   FLOW IN (SURFACE)  \\\n","1                             17.0                     450.0   \n","3                             18.0                     449.0   \n","4                             18.0                     450.0   \n","5                             18.0                     450.0   \n","6                             18.0                     450.0   \n","...                            ...                       ...   \n","1229642                       15.0                     221.0   \n","1229643                       15.0                     221.0   \n","1229644                       16.0                     221.0   \n","1229645                       15.0                     221.0   \n","1229646                       15.0                     222.0   \n","\n","          TVA (SURFACE)  GAIN LOSS  AVERAGE ROP  \n","1                       365.7        0.3     0.000000  \n","3                       366.0        0.3     0.000000  \n","4                       365.5       -0.5     0.000000  \n","5                       365.8        0.3     0.000000  \n","6                       366.0        0.2     0.000000  \n","...                       ...        ...          ...  \n","1229642                 159.6       -0.7     8.698883  \n","1229643                 159.6        0.0     8.698897  \n","1229644                 159.5       -0.1     8.698910  \n","1229645                 159.6        0.1     8.698924  \n","1229646                 159.6        0.0     8.698938  \n","\n","[1032248 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-e9e32b6f-9332-410d-8e54-a243a126cba5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TIME</th>\n","      <th> WOB (SURFACE)</th>\n","      <th> BIT DEPTH (SURFACE)</th>\n","      <th> DEPTH (SURFACE)</th>\n","      <th> ROP (SURFACE)</th>\n","      <th> BLOCK POSITION (SURFACE)</th>\n","      <th> RPM (SURFACE)</th>\n","      <th> HOOKLOAD (SURFACE)</th>\n","      <th> TORQUE (SURFACE)</th>\n","      <th> SPP (SURFACE)</th>\n","      <th> FLOW OUT (SURFACE)</th>\n","      <th> FLOW IN (SURFACE)</th>\n","      <th> TVA (SURFACE)</th>\n","      <th>GAIN LOSS</th>\n","      <th>AVERAGE ROP</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-09-30 07:00:00+03:00</td>\n","      <td>10.5</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>249.7</td>\n","      <td>2.913</td>\n","      <td>1439.6</td>\n","      <td>17.0</td>\n","      <td>450.0</td>\n","      <td>365.7</td>\n","      <td>0.3</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-09-30 07:00:01+03:00</td>\n","      <td>10.5</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>249.7</td>\n","      <td>3.447</td>\n","      <td>1451.2</td>\n","      <td>18.0</td>\n","      <td>449.0</td>\n","      <td>366.0</td>\n","      <td>0.3</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-09-30 07:00:02+03:00</td>\n","      <td>10.5</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>249.7</td>\n","      <td>3.010</td>\n","      <td>1442.5</td>\n","      <td>18.0</td>\n","      <td>450.0</td>\n","      <td>365.5</td>\n","      <td>-0.5</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2023-09-30 07:00:03+03:00</td>\n","      <td>10.0</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>250.3</td>\n","      <td>2.791</td>\n","      <td>1439.6</td>\n","      <td>18.0</td>\n","      <td>450.0</td>\n","      <td>365.8</td>\n","      <td>0.3</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2023-09-30 07:00:04+03:00</td>\n","      <td>10.3</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>249.7</td>\n","      <td>2.864</td>\n","      <td>1442.5</td>\n","      <td>18.0</td>\n","      <td>450.0</td>\n","      <td>366.0</td>\n","      <td>0.2</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1229642</th>\n","      <td>2023-10-12 05:45:26+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.62</td>\n","      <td>9773.62</td>\n","      <td>23.0</td>\n","      <td>45.9</td>\n","      <td>39.001</td>\n","      <td>204.6</td>\n","      <td>1.481</td>\n","      <td>2068.8</td>\n","      <td>15.0</td>\n","      <td>221.0</td>\n","      <td>159.6</td>\n","      <td>-0.7</td>\n","      <td>8.698883</td>\n","    </tr>\n","    <tr>\n","      <th>1229643</th>\n","      <td>2023-10-12 05:45:27+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.62</td>\n","      <td>9773.62</td>\n","      <td>23.0</td>\n","      <td>45.9</td>\n","      <td>38.001</td>\n","      <td>204.6</td>\n","      <td>2.427</td>\n","      <td>2068.8</td>\n","      <td>15.0</td>\n","      <td>221.0</td>\n","      <td>159.6</td>\n","      <td>0.0</td>\n","      <td>8.698897</td>\n","    </tr>\n","    <tr>\n","      <th>1229644</th>\n","      <td>2023-10-12 05:45:28+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.64</td>\n","      <td>9773.64</td>\n","      <td>23.0</td>\n","      <td>45.8</td>\n","      <td>38.001</td>\n","      <td>205.3</td>\n","      <td>2.354</td>\n","      <td>2087.4</td>\n","      <td>16.0</td>\n","      <td>221.0</td>\n","      <td>159.5</td>\n","      <td>-0.1</td>\n","      <td>8.698910</td>\n","    </tr>\n","    <tr>\n","      <th>1229645</th>\n","      <td>2023-10-12 05:45:29+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.64</td>\n","      <td>9773.64</td>\n","      <td>23.0</td>\n","      <td>45.8</td>\n","      <td>39.001</td>\n","      <td>205.3</td>\n","      <td>1.650</td>\n","      <td>2076.8</td>\n","      <td>15.0</td>\n","      <td>221.0</td>\n","      <td>159.6</td>\n","      <td>0.1</td>\n","      <td>8.698924</td>\n","    </tr>\n","    <tr>\n","      <th>1229646</th>\n","      <td>2023-10-12 05:45:30+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.64</td>\n","      <td>9773.64</td>\n","      <td>22.9</td>\n","      <td>45.8</td>\n","      <td>39.001</td>\n","      <td>205.3</td>\n","      <td>1.966</td>\n","      <td>2076.8</td>\n","      <td>15.0</td>\n","      <td>222.0</td>\n","      <td>159.6</td>\n","      <td>0.0</td>\n","      <td>8.698938</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1032248 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e9e32b6f-9332-410d-8e54-a243a126cba5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e9e32b6f-9332-410d-8e54-a243a126cba5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e9e32b6f-9332-410d-8e54-a243a126cba5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b62f7895-762b-4f8b-bf7f-223b5f84c397\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b62f7895-762b-4f8b-bf7f-223b5f84c397')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b62f7895-762b-4f8b-bf7f-223b5f84c397 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_32696447-93ed-419e-9b2f-ef346dc4eaa7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df2')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_32696447-93ed-419e-9b2f-ef346dc4eaa7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df2');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2"}},"metadata":{},"execution_count":37}],"source":["col_to_drop = [' TTV (SURFACE)',' TVT (SURFACE)',' MLOG LAG DEPTH',\n","               ' SPM3 (SURFACE)', ' SPM2 (SURFACE)',' SPM1 (SURFACE)',' TTV2 (SURFACE)']\n","df2 = df2.drop(columns=col_to_drop)\n","df2"]},{"cell_type":"code","source":["#only get data when it is on bottom drilling and that is when bit depth == depth\n","drilling_df = df2[df2[' BIT DEPTH (SURFACE)'] == df2[' DEPTH (SURFACE)']]\n","drilling_df = drilling_df[drilling_df[' ROP (SURFACE)'] > 0]\n","drilling_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":669},"id":"aAeLP8dlTtP7","executionInfo":{"status":"ok","timestamp":1724250206241,"user_tz":-60,"elapsed":297,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"da5053d6-bcdd-4b35-bbd9-6960876840c7"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                             TIME   WOB (SURFACE)  \\\n","24      2023-09-30 07:00:19+03:00                   9.9   \n","25      2023-09-30 07:00:20+03:00                   9.6   \n","27      2023-09-30 07:00:21+03:00                   9.5   \n","28      2023-09-30 07:00:22+03:00                   9.6   \n","29      2023-09-30 07:00:23+03:00                   9.8   \n","...                           ...                   ...   \n","1229642 2023-10-12 05:45:26+03:00                   0.0   \n","1229643 2023-10-12 05:45:27+03:00                   0.0   \n","1229644 2023-10-12 05:45:28+03:00                   0.0   \n","1229645 2023-10-12 05:45:29+03:00                   0.0   \n","1229646 2023-10-12 05:45:30+03:00                   0.0   \n","\n","          BIT DEPTH (SURFACE)   DEPTH (SURFACE)  \\\n","24                          8736.25                 8736.25   \n","25                          8736.25                 8736.25   \n","27                          8736.27                 8736.27   \n","28                          8736.27                 8736.27   \n","29                          8736.27                 8736.27   \n","...                             ...                     ...   \n","1229642                     9773.62                 9773.62   \n","1229643                     9773.62                 9773.62   \n","1229644                     9773.64                 9773.64   \n","1229645                     9773.64                 9773.64   \n","1229646                     9773.64                 9773.64   \n","\n","          ROP (SURFACE)   BLOCK POSITION (SURFACE)  \\\n","24                        2.5                             59.1   \n","25                        2.5                             59.1   \n","27                        2.5                             59.1   \n","28                        2.5                             59.1   \n","29                        2.5                             59.1   \n","...                       ...                              ...   \n","1229642                  23.0                             45.9   \n","1229643                  23.0                             45.9   \n","1229644                  23.0                             45.8   \n","1229645                  23.0                             45.8   \n","1229646                  22.9                             45.8   \n","\n","          RPM (SURFACE)   HOOKLOAD (SURFACE)  \\\n","24                     40.001                      251.0   \n","25                     40.001                      250.3   \n","27                     40.001                      251.0   \n","28                     40.001                      250.3   \n","29                     40.001                      251.0   \n","...                       ...                        ...   \n","1229642                39.001                      204.6   \n","1229643                38.001                      204.6   \n","1229644                38.001                      205.3   \n","1229645                39.001                      205.3   \n","1229646                39.001                      205.3   \n","\n","          TORQUE (SURFACE)   SPP (SURFACE)  \\\n","24                         3.180                1445.4   \n","25                         2.549                1442.5   \n","27                         2.743                1442.5   \n","28                         3.398                1445.4   \n","29                         3.277                1442.5   \n","...                          ...                   ...   \n","1229642                    1.481                2068.8   \n","1229643                    2.427                2068.8   \n","1229644                    2.354                2087.4   \n","1229645                    1.650                2076.8   \n","1229646                    1.966                2076.8   \n","\n","          FLOW OUT (SURFACE)   FLOW IN (SURFACE)  \\\n","24                            16.0                     450.0   \n","25                            15.0                     449.0   \n","27                            16.0                     450.0   \n","28                            17.0                     449.0   \n","29                            18.0                     450.0   \n","...                            ...                       ...   \n","1229642                       15.0                     221.0   \n","1229643                       15.0                     221.0   \n","1229644                       16.0                     221.0   \n","1229645                       15.0                     221.0   \n","1229646                       15.0                     222.0   \n","\n","          TVA (SURFACE)  GAIN LOSS  AVERAGE ROP  \n","24                      365.7       -0.9     0.125000  \n","25                      365.5       -0.2     0.238095  \n","27                      365.5        0.0     0.340909  \n","28                      365.5        0.0     0.434783  \n","29                      365.8        0.3     0.520833  \n","...                       ...        ...          ...  \n","1229642                 159.6       -0.7     8.698883  \n","1229643                 159.6        0.0     8.698897  \n","1229644                 159.5       -0.1     8.698910  \n","1229645                 159.6        0.1     8.698924  \n","1229646                 159.6        0.0     8.698938  \n","\n","[209220 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-7f8bb2e8-5f76-4185-8c99-ad728082e07f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TIME</th>\n","      <th> WOB (SURFACE)</th>\n","      <th> BIT DEPTH (SURFACE)</th>\n","      <th> DEPTH (SURFACE)</th>\n","      <th> ROP (SURFACE)</th>\n","      <th> BLOCK POSITION (SURFACE)</th>\n","      <th> RPM (SURFACE)</th>\n","      <th> HOOKLOAD (SURFACE)</th>\n","      <th> TORQUE (SURFACE)</th>\n","      <th> SPP (SURFACE)</th>\n","      <th> FLOW OUT (SURFACE)</th>\n","      <th> FLOW IN (SURFACE)</th>\n","      <th> TVA (SURFACE)</th>\n","      <th>GAIN LOSS</th>\n","      <th>AVERAGE ROP</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24</th>\n","      <td>2023-09-30 07:00:19+03:00</td>\n","      <td>9.9</td>\n","      <td>8736.25</td>\n","      <td>8736.25</td>\n","      <td>2.5</td>\n","      <td>59.1</td>\n","      <td>40.001</td>\n","      <td>251.0</td>\n","      <td>3.180</td>\n","      <td>1445.4</td>\n","      <td>16.0</td>\n","      <td>450.0</td>\n","      <td>365.7</td>\n","      <td>-0.9</td>\n","      <td>0.125000</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>2023-09-30 07:00:20+03:00</td>\n","      <td>9.6</td>\n","      <td>8736.25</td>\n","      <td>8736.25</td>\n","      <td>2.5</td>\n","      <td>59.1</td>\n","      <td>40.001</td>\n","      <td>250.3</td>\n","      <td>2.549</td>\n","      <td>1442.5</td>\n","      <td>15.0</td>\n","      <td>449.0</td>\n","      <td>365.5</td>\n","      <td>-0.2</td>\n","      <td>0.238095</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>2023-09-30 07:00:21+03:00</td>\n","      <td>9.5</td>\n","      <td>8736.27</td>\n","      <td>8736.27</td>\n","      <td>2.5</td>\n","      <td>59.1</td>\n","      <td>40.001</td>\n","      <td>251.0</td>\n","      <td>2.743</td>\n","      <td>1442.5</td>\n","      <td>16.0</td>\n","      <td>450.0</td>\n","      <td>365.5</td>\n","      <td>0.0</td>\n","      <td>0.340909</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>2023-09-30 07:00:22+03:00</td>\n","      <td>9.6</td>\n","      <td>8736.27</td>\n","      <td>8736.27</td>\n","      <td>2.5</td>\n","      <td>59.1</td>\n","      <td>40.001</td>\n","      <td>250.3</td>\n","      <td>3.398</td>\n","      <td>1445.4</td>\n","      <td>17.0</td>\n","      <td>449.0</td>\n","      <td>365.5</td>\n","      <td>0.0</td>\n","      <td>0.434783</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>2023-09-30 07:00:23+03:00</td>\n","      <td>9.8</td>\n","      <td>8736.27</td>\n","      <td>8736.27</td>\n","      <td>2.5</td>\n","      <td>59.1</td>\n","      <td>40.001</td>\n","      <td>251.0</td>\n","      <td>3.277</td>\n","      <td>1442.5</td>\n","      <td>18.0</td>\n","      <td>450.0</td>\n","      <td>365.8</td>\n","      <td>0.3</td>\n","      <td>0.520833</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1229642</th>\n","      <td>2023-10-12 05:45:26+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.62</td>\n","      <td>9773.62</td>\n","      <td>23.0</td>\n","      <td>45.9</td>\n","      <td>39.001</td>\n","      <td>204.6</td>\n","      <td>1.481</td>\n","      <td>2068.8</td>\n","      <td>15.0</td>\n","      <td>221.0</td>\n","      <td>159.6</td>\n","      <td>-0.7</td>\n","      <td>8.698883</td>\n","    </tr>\n","    <tr>\n","      <th>1229643</th>\n","      <td>2023-10-12 05:45:27+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.62</td>\n","      <td>9773.62</td>\n","      <td>23.0</td>\n","      <td>45.9</td>\n","      <td>38.001</td>\n","      <td>204.6</td>\n","      <td>2.427</td>\n","      <td>2068.8</td>\n","      <td>15.0</td>\n","      <td>221.0</td>\n","      <td>159.6</td>\n","      <td>0.0</td>\n","      <td>8.698897</td>\n","    </tr>\n","    <tr>\n","      <th>1229644</th>\n","      <td>2023-10-12 05:45:28+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.64</td>\n","      <td>9773.64</td>\n","      <td>23.0</td>\n","      <td>45.8</td>\n","      <td>38.001</td>\n","      <td>205.3</td>\n","      <td>2.354</td>\n","      <td>2087.4</td>\n","      <td>16.0</td>\n","      <td>221.0</td>\n","      <td>159.5</td>\n","      <td>-0.1</td>\n","      <td>8.698910</td>\n","    </tr>\n","    <tr>\n","      <th>1229645</th>\n","      <td>2023-10-12 05:45:29+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.64</td>\n","      <td>9773.64</td>\n","      <td>23.0</td>\n","      <td>45.8</td>\n","      <td>39.001</td>\n","      <td>205.3</td>\n","      <td>1.650</td>\n","      <td>2076.8</td>\n","      <td>15.0</td>\n","      <td>221.0</td>\n","      <td>159.6</td>\n","      <td>0.1</td>\n","      <td>8.698924</td>\n","    </tr>\n","    <tr>\n","      <th>1229646</th>\n","      <td>2023-10-12 05:45:30+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.64</td>\n","      <td>9773.64</td>\n","      <td>22.9</td>\n","      <td>45.8</td>\n","      <td>39.001</td>\n","      <td>205.3</td>\n","      <td>1.966</td>\n","      <td>2076.8</td>\n","      <td>15.0</td>\n","      <td>222.0</td>\n","      <td>159.6</td>\n","      <td>0.0</td>\n","      <td>8.698938</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>209220 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7f8bb2e8-5f76-4185-8c99-ad728082e07f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7f8bb2e8-5f76-4185-8c99-ad728082e07f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7f8bb2e8-5f76-4185-8c99-ad728082e07f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cce42e5b-5436-45ea-96ab-49b1cc4f6b31\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cce42e5b-5436-45ea-96ab-49b1cc4f6b31')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cce42e5b-5436-45ea-96ab-49b1cc4f6b31 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_86347aea-6cfd-4ed7-94d6-f2327659647b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('drilling_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_86347aea-6cfd-4ed7-94d6-f2327659647b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('drilling_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"drilling_df"}},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["# Set the TIME column as index\n","drilling_df.set_index('TIME', inplace=True)\n","\n","# Resample the DataFrame to 1-minute intervals, taking the mean of each column\n","df_resampled = drilling_df.resample('T').mean()\n","df_resampled = df_resampled.reset_index(inplace=True)\n","drilling_df = df_resampled\n","drilling_df"],"metadata":{"id":"U8trmiyD0lva","executionInfo":{"status":"ok","timestamp":1724250239147,"user_tz":-60,"elapsed":419,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["df2.reset_index(inplace=True)\n","df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":669},"collapsed":true,"id":"3CWDyyK08B3f","outputId":"fdce1f7a-423c-4817-f6d4-f36cbeac93ff","executionInfo":{"status":"ok","timestamp":1724249399950,"user_tz":-60,"elapsed":348,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}}},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                             TIME   WOB (SURFACE)  \\\n","0       2023-09-30 07:00:00+03:00                  10.5   \n","1       2023-09-30 07:00:01+03:00                  10.5   \n","2       2023-09-30 07:00:02+03:00                  10.5   \n","3       2023-09-30 07:00:03+03:00                  10.0   \n","4       2023-09-30 07:00:04+03:00                  10.3   \n","...                           ...                   ...   \n","1032243 2023-10-12 05:45:26+03:00                   0.0   \n","1032244 2023-10-12 05:45:27+03:00                   0.0   \n","1032245 2023-10-12 05:45:28+03:00                   0.0   \n","1032246 2023-10-12 05:45:29+03:00                   0.0   \n","1032247 2023-10-12 05:45:30+03:00                   0.0   \n","\n","          BIT DEPTH (SURFACE)   DEPTH (SURFACE)  \\\n","0                           8736.23                 8736.23   \n","1                           8736.23                 8736.23   \n","2                           8736.23                 8736.23   \n","3                           8736.23                 8736.23   \n","4                           8736.23                 8736.23   \n","...                             ...                     ...   \n","1032243                     9773.62                 9773.62   \n","1032244                     9773.62                 9773.62   \n","1032245                     9773.64                 9773.64   \n","1032246                     9773.64                 9773.64   \n","1032247                     9773.64                 9773.64   \n","\n","          ROP (SURFACE)   BLOCK POSITION (SURFACE)  \\\n","0                         0.0                             59.2   \n","1                         0.0                             59.2   \n","2                         0.0                             59.2   \n","3                         0.0                             59.2   \n","4                         0.0                             59.2   \n","...                       ...                              ...   \n","1032243                  23.0                             45.9   \n","1032244                  23.0                             45.9   \n","1032245                  23.0                             45.8   \n","1032246                  23.0                             45.8   \n","1032247                  22.9                             45.8   \n","\n","          RPM (SURFACE)   HOOKLOAD (SURFACE)  \\\n","0                      40.001                      249.7   \n","1                      40.001                      249.7   \n","2                      40.001                      249.7   \n","3                      40.001                      250.3   \n","4                      40.001                      249.7   \n","...                       ...                        ...   \n","1032243                39.001                      204.6   \n","1032244                38.001                      204.6   \n","1032245                38.001                      205.3   \n","1032246                39.001                      205.3   \n","1032247                39.001                      205.3   \n","\n","          TORQUE (SURFACE)   SPP (SURFACE)  \\\n","0                          2.913                1439.6   \n","1                          3.447                1451.2   \n","2                          3.010                1442.5   \n","3                          2.791                1439.6   \n","4                          2.864                1442.5   \n","...                          ...                   ...   \n","1032243                    1.481                2068.8   \n","1032244                    2.427                2068.8   \n","1032245                    2.354                2087.4   \n","1032246                    1.650                2076.8   \n","1032247                    1.966                2076.8   \n","\n","          FLOW OUT (SURFACE)   FLOW IN (SURFACE)  \\\n","0                             17.0                     450.0   \n","1                             18.0                     449.0   \n","2                             18.0                     450.0   \n","3                             18.0                     450.0   \n","4                             18.0                     450.0   \n","...                            ...                       ...   \n","1032243                       15.0                     221.0   \n","1032244                       15.0                     221.0   \n","1032245                       16.0                     221.0   \n","1032246                       15.0                     221.0   \n","1032247                       15.0                     222.0   \n","\n","          TVA (SURFACE)  GAIN LOSS  AVERAGE ROP  \n","0                       365.7        0.3     0.000000  \n","1                       366.0        0.3     0.000000  \n","2                       365.5       -0.5     0.000000  \n","3                       365.8        0.3     0.000000  \n","4                       366.0        0.2     0.000000  \n","...                       ...        ...          ...  \n","1032243                 159.6       -0.7     8.698883  \n","1032244                 159.6        0.0     8.698897  \n","1032245                 159.5       -0.1     8.698910  \n","1032246                 159.6        0.1     8.698924  \n","1032247                 159.6        0.0     8.698938  \n","\n","[1032248 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-6761320c-6e27-40e2-a3cd-043f4a6caef3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TIME</th>\n","      <th> WOB (SURFACE)</th>\n","      <th> BIT DEPTH (SURFACE)</th>\n","      <th> DEPTH (SURFACE)</th>\n","      <th> ROP (SURFACE)</th>\n","      <th> BLOCK POSITION (SURFACE)</th>\n","      <th> RPM (SURFACE)</th>\n","      <th> HOOKLOAD (SURFACE)</th>\n","      <th> TORQUE (SURFACE)</th>\n","      <th> SPP (SURFACE)</th>\n","      <th> FLOW OUT (SURFACE)</th>\n","      <th> FLOW IN (SURFACE)</th>\n","      <th> TVA (SURFACE)</th>\n","      <th>GAIN LOSS</th>\n","      <th>AVERAGE ROP</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-09-30 07:00:00+03:00</td>\n","      <td>10.5</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>249.7</td>\n","      <td>2.913</td>\n","      <td>1439.6</td>\n","      <td>17.0</td>\n","      <td>450.0</td>\n","      <td>365.7</td>\n","      <td>0.3</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-09-30 07:00:01+03:00</td>\n","      <td>10.5</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>249.7</td>\n","      <td>3.447</td>\n","      <td>1451.2</td>\n","      <td>18.0</td>\n","      <td>449.0</td>\n","      <td>366.0</td>\n","      <td>0.3</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-09-30 07:00:02+03:00</td>\n","      <td>10.5</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>249.7</td>\n","      <td>3.010</td>\n","      <td>1442.5</td>\n","      <td>18.0</td>\n","      <td>450.0</td>\n","      <td>365.5</td>\n","      <td>-0.5</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-09-30 07:00:03+03:00</td>\n","      <td>10.0</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>250.3</td>\n","      <td>2.791</td>\n","      <td>1439.6</td>\n","      <td>18.0</td>\n","      <td>450.0</td>\n","      <td>365.8</td>\n","      <td>0.3</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-09-30 07:00:04+03:00</td>\n","      <td>10.3</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>249.7</td>\n","      <td>2.864</td>\n","      <td>1442.5</td>\n","      <td>18.0</td>\n","      <td>450.0</td>\n","      <td>366.0</td>\n","      <td>0.2</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1032243</th>\n","      <td>2023-10-12 05:45:26+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.62</td>\n","      <td>9773.62</td>\n","      <td>23.0</td>\n","      <td>45.9</td>\n","      <td>39.001</td>\n","      <td>204.6</td>\n","      <td>1.481</td>\n","      <td>2068.8</td>\n","      <td>15.0</td>\n","      <td>221.0</td>\n","      <td>159.6</td>\n","      <td>-0.7</td>\n","      <td>8.698883</td>\n","    </tr>\n","    <tr>\n","      <th>1032244</th>\n","      <td>2023-10-12 05:45:27+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.62</td>\n","      <td>9773.62</td>\n","      <td>23.0</td>\n","      <td>45.9</td>\n","      <td>38.001</td>\n","      <td>204.6</td>\n","      <td>2.427</td>\n","      <td>2068.8</td>\n","      <td>15.0</td>\n","      <td>221.0</td>\n","      <td>159.6</td>\n","      <td>0.0</td>\n","      <td>8.698897</td>\n","    </tr>\n","    <tr>\n","      <th>1032245</th>\n","      <td>2023-10-12 05:45:28+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.64</td>\n","      <td>9773.64</td>\n","      <td>23.0</td>\n","      <td>45.8</td>\n","      <td>38.001</td>\n","      <td>205.3</td>\n","      <td>2.354</td>\n","      <td>2087.4</td>\n","      <td>16.0</td>\n","      <td>221.0</td>\n","      <td>159.5</td>\n","      <td>-0.1</td>\n","      <td>8.698910</td>\n","    </tr>\n","    <tr>\n","      <th>1032246</th>\n","      <td>2023-10-12 05:45:29+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.64</td>\n","      <td>9773.64</td>\n","      <td>23.0</td>\n","      <td>45.8</td>\n","      <td>39.001</td>\n","      <td>205.3</td>\n","      <td>1.650</td>\n","      <td>2076.8</td>\n","      <td>15.0</td>\n","      <td>221.0</td>\n","      <td>159.6</td>\n","      <td>0.1</td>\n","      <td>8.698924</td>\n","    </tr>\n","    <tr>\n","      <th>1032247</th>\n","      <td>2023-10-12 05:45:30+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.64</td>\n","      <td>9773.64</td>\n","      <td>22.9</td>\n","      <td>45.8</td>\n","      <td>39.001</td>\n","      <td>205.3</td>\n","      <td>1.966</td>\n","      <td>2076.8</td>\n","      <td>15.0</td>\n","      <td>222.0</td>\n","      <td>159.6</td>\n","      <td>0.0</td>\n","      <td>8.698938</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1032248 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6761320c-6e27-40e2-a3cd-043f4a6caef3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6761320c-6e27-40e2-a3cd-043f4a6caef3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6761320c-6e27-40e2-a3cd-043f4a6caef3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-57e598e9-e48b-4057-937d-951f05f9fdf2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-57e598e9-e48b-4057-937d-951f05f9fdf2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-57e598e9-e48b-4057-937d-951f05f9fdf2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7ecdb282-3a7e-4315-823c-8ef56ff7a238\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df2')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7ecdb282-3a7e-4315-823c-8ef56ff7a238 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df2');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":669},"id":"yQsobAKqTANT","executionInfo":{"status":"ok","timestamp":1724249805019,"user_tz":-60,"elapsed":503,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"edcdc18b-407b-4c65-ae50-17aab60583cd"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                             TIME   WOB (SURFACE)  \\\n","0       2023-09-30 07:00:00+03:00                  10.5   \n","1       2023-09-30 07:00:01+03:00                  10.5   \n","2       2023-09-30 07:00:02+03:00                  10.5   \n","3       2023-09-30 07:00:03+03:00                  10.0   \n","4       2023-09-30 07:00:04+03:00                  10.3   \n","...                           ...                   ...   \n","1032243 2023-10-12 05:45:26+03:00                   0.0   \n","1032244 2023-10-12 05:45:27+03:00                   0.0   \n","1032245 2023-10-12 05:45:28+03:00                   0.0   \n","1032246 2023-10-12 05:45:29+03:00                   0.0   \n","1032247 2023-10-12 05:45:30+03:00                   0.0   \n","\n","          BIT DEPTH (SURFACE)   DEPTH (SURFACE)  \\\n","0                           8736.23                 8736.23   \n","1                           8736.23                 8736.23   \n","2                           8736.23                 8736.23   \n","3                           8736.23                 8736.23   \n","4                           8736.23                 8736.23   \n","...                             ...                     ...   \n","1032243                     9773.62                 9773.62   \n","1032244                     9773.62                 9773.62   \n","1032245                     9773.64                 9773.64   \n","1032246                     9773.64                 9773.64   \n","1032247                     9773.64                 9773.64   \n","\n","          ROP (SURFACE)   BLOCK POSITION (SURFACE)  \\\n","0                         0.0                             59.2   \n","1                         0.0                             59.2   \n","2                         0.0                             59.2   \n","3                         0.0                             59.2   \n","4                         0.0                             59.2   \n","...                       ...                              ...   \n","1032243                  23.0                             45.9   \n","1032244                  23.0                             45.9   \n","1032245                  23.0                             45.8   \n","1032246                  23.0                             45.8   \n","1032247                  22.9                             45.8   \n","\n","          RPM (SURFACE)   HOOKLOAD (SURFACE)  \\\n","0                      40.001                      249.7   \n","1                      40.001                      249.7   \n","2                      40.001                      249.7   \n","3                      40.001                      250.3   \n","4                      40.001                      249.7   \n","...                       ...                        ...   \n","1032243                39.001                      204.6   \n","1032244                38.001                      204.6   \n","1032245                38.001                      205.3   \n","1032246                39.001                      205.3   \n","1032247                39.001                      205.3   \n","\n","          TORQUE (SURFACE)   SPP (SURFACE)  \\\n","0                          2.913                1439.6   \n","1                          3.447                1451.2   \n","2                          3.010                1442.5   \n","3                          2.791                1439.6   \n","4                          2.864                1442.5   \n","...                          ...                   ...   \n","1032243                    1.481                2068.8   \n","1032244                    2.427                2068.8   \n","1032245                    2.354                2087.4   \n","1032246                    1.650                2076.8   \n","1032247                    1.966                2076.8   \n","\n","          FLOW OUT (SURFACE)   FLOW IN (SURFACE)  \\\n","0                             17.0                     450.0   \n","1                             18.0                     449.0   \n","2                             18.0                     450.0   \n","3                             18.0                     450.0   \n","4                             18.0                     450.0   \n","...                            ...                       ...   \n","1032243                       15.0                     221.0   \n","1032244                       15.0                     221.0   \n","1032245                       16.0                     221.0   \n","1032246                       15.0                     221.0   \n","1032247                       15.0                     222.0   \n","\n","          TVA (SURFACE)  GAIN LOSS  AVERAGE ROP  \n","0                       365.7        0.3     0.000000  \n","1                       366.0        0.3     0.000000  \n","2                       365.5       -0.5     0.000000  \n","3                       365.8        0.3     0.000000  \n","4                       366.0        0.2     0.000000  \n","...                       ...        ...          ...  \n","1032243                 159.6       -0.7     8.698883  \n","1032244                 159.6        0.0     8.698897  \n","1032245                 159.5       -0.1     8.698910  \n","1032246                 159.6        0.1     8.698924  \n","1032247                 159.6        0.0     8.698938  \n","\n","[1032248 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-ef2270c2-a907-405b-bfeb-6929834173e9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TIME</th>\n","      <th> WOB (SURFACE)</th>\n","      <th> BIT DEPTH (SURFACE)</th>\n","      <th> DEPTH (SURFACE)</th>\n","      <th> ROP (SURFACE)</th>\n","      <th> BLOCK POSITION (SURFACE)</th>\n","      <th> RPM (SURFACE)</th>\n","      <th> HOOKLOAD (SURFACE)</th>\n","      <th> TORQUE (SURFACE)</th>\n","      <th> SPP (SURFACE)</th>\n","      <th> FLOW OUT (SURFACE)</th>\n","      <th> FLOW IN (SURFACE)</th>\n","      <th> TVA (SURFACE)</th>\n","      <th>GAIN LOSS</th>\n","      <th>AVERAGE ROP</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-09-30 07:00:00+03:00</td>\n","      <td>10.5</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>249.7</td>\n","      <td>2.913</td>\n","      <td>1439.6</td>\n","      <td>17.0</td>\n","      <td>450.0</td>\n","      <td>365.7</td>\n","      <td>0.3</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-09-30 07:00:01+03:00</td>\n","      <td>10.5</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>249.7</td>\n","      <td>3.447</td>\n","      <td>1451.2</td>\n","      <td>18.0</td>\n","      <td>449.0</td>\n","      <td>366.0</td>\n","      <td>0.3</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-09-30 07:00:02+03:00</td>\n","      <td>10.5</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>249.7</td>\n","      <td>3.010</td>\n","      <td>1442.5</td>\n","      <td>18.0</td>\n","      <td>450.0</td>\n","      <td>365.5</td>\n","      <td>-0.5</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-09-30 07:00:03+03:00</td>\n","      <td>10.0</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>250.3</td>\n","      <td>2.791</td>\n","      <td>1439.6</td>\n","      <td>18.0</td>\n","      <td>450.0</td>\n","      <td>365.8</td>\n","      <td>0.3</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-09-30 07:00:04+03:00</td>\n","      <td>10.3</td>\n","      <td>8736.23</td>\n","      <td>8736.23</td>\n","      <td>0.0</td>\n","      <td>59.2</td>\n","      <td>40.001</td>\n","      <td>249.7</td>\n","      <td>2.864</td>\n","      <td>1442.5</td>\n","      <td>18.0</td>\n","      <td>450.0</td>\n","      <td>366.0</td>\n","      <td>0.2</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1032243</th>\n","      <td>2023-10-12 05:45:26+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.62</td>\n","      <td>9773.62</td>\n","      <td>23.0</td>\n","      <td>45.9</td>\n","      <td>39.001</td>\n","      <td>204.6</td>\n","      <td>1.481</td>\n","      <td>2068.8</td>\n","      <td>15.0</td>\n","      <td>221.0</td>\n","      <td>159.6</td>\n","      <td>-0.7</td>\n","      <td>8.698883</td>\n","    </tr>\n","    <tr>\n","      <th>1032244</th>\n","      <td>2023-10-12 05:45:27+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.62</td>\n","      <td>9773.62</td>\n","      <td>23.0</td>\n","      <td>45.9</td>\n","      <td>38.001</td>\n","      <td>204.6</td>\n","      <td>2.427</td>\n","      <td>2068.8</td>\n","      <td>15.0</td>\n","      <td>221.0</td>\n","      <td>159.6</td>\n","      <td>0.0</td>\n","      <td>8.698897</td>\n","    </tr>\n","    <tr>\n","      <th>1032245</th>\n","      <td>2023-10-12 05:45:28+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.64</td>\n","      <td>9773.64</td>\n","      <td>23.0</td>\n","      <td>45.8</td>\n","      <td>38.001</td>\n","      <td>205.3</td>\n","      <td>2.354</td>\n","      <td>2087.4</td>\n","      <td>16.0</td>\n","      <td>221.0</td>\n","      <td>159.5</td>\n","      <td>-0.1</td>\n","      <td>8.698910</td>\n","    </tr>\n","    <tr>\n","      <th>1032246</th>\n","      <td>2023-10-12 05:45:29+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.64</td>\n","      <td>9773.64</td>\n","      <td>23.0</td>\n","      <td>45.8</td>\n","      <td>39.001</td>\n","      <td>205.3</td>\n","      <td>1.650</td>\n","      <td>2076.8</td>\n","      <td>15.0</td>\n","      <td>221.0</td>\n","      <td>159.6</td>\n","      <td>0.1</td>\n","      <td>8.698924</td>\n","    </tr>\n","    <tr>\n","      <th>1032247</th>\n","      <td>2023-10-12 05:45:30+03:00</td>\n","      <td>0.0</td>\n","      <td>9773.64</td>\n","      <td>9773.64</td>\n","      <td>22.9</td>\n","      <td>45.8</td>\n","      <td>39.001</td>\n","      <td>205.3</td>\n","      <td>1.966</td>\n","      <td>2076.8</td>\n","      <td>15.0</td>\n","      <td>222.0</td>\n","      <td>159.6</td>\n","      <td>0.0</td>\n","      <td>8.698938</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1032248 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef2270c2-a907-405b-bfeb-6929834173e9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ef2270c2-a907-405b-bfeb-6929834173e9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ef2270c2-a907-405b-bfeb-6929834173e9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b7b44672-8d8b-4e32-8440-db03729e4cde\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b7b44672-8d8b-4e32-8440-db03729e4cde')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b7b44672-8d8b-4e32-8440-db03729e4cde button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8b33718f-f163-468d-a41c-49ee8bd2b44e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df2')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8b33718f-f163-468d-a41c-49ee8bd2b44e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df2');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["df2.to_csv('resampled_well.csv')"],"metadata":{"id":"bMzHAJgURCzV","executionInfo":{"status":"ok","timestamp":1724249429918,"user_tz":-60,"elapsed":29986,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}}},"execution_count":16,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9YEYXuVOKnGg"},"source":["## On Bottom Drilling\n","\n","We only need to check for the data when there is on bottom drilling thus, we need the bit depth and the depth to be the same and the ROP to be greater than zero.\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":669},"id":"F2jHBwf3Klfs","outputId":"25d2b5bd-03a0-439a-88b0-20345c88cd53","executionInfo":{"status":"ok","timestamp":1723823310785,"user_tz":-60,"elapsed":23,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                           TIME   WOB (SURFACE)  \\\n","0     2023-09-30 07:00:00+03:00              9.783333   \n","1     2023-09-30 07:01:00+03:00             11.678333   \n","2     2023-09-30 07:02:00+03:00             15.778333   \n","3     2023-09-30 07:03:00+03:00             15.936667   \n","4     2023-09-30 07:04:00+03:00             17.283333   \n","...                         ...                   ...   \n","17201 2023-10-12 05:41:00+03:00              1.776667   \n","17202 2023-10-12 05:42:00+03:00              0.581667   \n","17203 2023-10-12 05:43:00+03:00              0.000000   \n","17204 2023-10-12 05:44:00+03:00              0.000000   \n","17205 2023-10-12 05:45:00+03:00              0.000000   \n","\n","        BIT DEPTH (SURFACE)   DEPTH (SURFACE)  \\\n","0                     8736.283667             8736.283667   \n","1                     8736.496000             8736.496000   \n","2                     8736.613000             8736.613000   \n","3                     8736.785000             8736.785000   \n","4                     8736.845000             8736.845000   \n","...                           ...                     ...   \n","17201                 9772.161333             9772.161333   \n","17202                 9772.480833             9772.480833   \n","17203                 9772.851500             9772.851500   \n","17204                 9773.244667             9773.244667   \n","17205                 9773.543871             9773.543871   \n","\n","        ROP (SURFACE)   BLOCK POSITION (SURFACE)  \\\n","0                  5.863333                        59.108333   \n","1                 15.805000                        58.883333   \n","2                  2.055000                        58.795000   \n","3                 13.816667                        58.583333   \n","4                  0.675000                        58.500000   \n","...                     ...                              ...   \n","17201             29.615000                        47.305000   \n","17202             16.603333                        46.986667   \n","17203             22.546667                        46.625000   \n","17204             23.805000                        46.231667   \n","17205             23.351613                        45.932258   \n","\n","        RPM (SURFACE)   HOOKLOAD (SURFACE)  \\\n","0                 40.001000                 250.581667   \n","1                 39.884333                 248.641667   \n","2                 39.801000                 244.603333   \n","3                 39.684333                 244.426667   \n","4                 39.767667                 243.113333   \n","...                     ...                        ...   \n","17201             38.317667                 202.886667   \n","17202             38.451000                 204.165000   \n","17203             38.367667                 205.506667   \n","17204             38.401000                 205.900000   \n","17205             38.420355                 205.267742   \n","\n","        TORQUE (SURFACE)   SPP (SURFACE)  \\\n","0                     3.072500           1440.566667   \n","1                     3.810383           1431.866667   \n","2                     4.018283           1422.006667   \n","3                     4.262550           1418.086667   \n","4                     4.079317           1409.390000   \n","...                        ...                   ...   \n","17201                 2.256900           2089.008333   \n","17202                 2.093467           2088.306667   \n","17203                 1.953100           2098.301667   \n","17204                 1.983400           2083.573333   \n","17205                 2.053774           2080.796774   \n","\n","        FLOW OUT (SURFACE)   FLOW IN (SURFACE)  \\\n","0                      16.650000                449.683333   \n","1                      16.366667                449.666667   \n","2                      16.050000                449.716667   \n","3                      16.600000                449.666667   \n","4                      16.783333                449.716667   \n","...                          ...                       ...   \n","17201                  15.783333                220.966667   \n","17202                  15.933333                221.066667   \n","17203                  15.683333                220.950000   \n","17204                  15.766667                221.000000   \n","17205                  15.741935                221.161290   \n","\n","        TVA (SURFACE)  GAIN LOSS  AVERAGE ROP  \n","0                365.918333   0.005000     2.140987  \n","1                365.650000  -0.001667     8.130710  \n","2                366.325000   0.025000     9.445737  \n","3                367.048333   0.000000     8.708046  \n","4                367.143333   0.013333     8.415334  \n","...                     ...        ...          ...  \n","17201            158.235000   0.000000     8.695717  \n","17202            158.196667   0.015000     8.696518  \n","17203            158.165000  -0.016667     8.697212  \n","17204            158.100000   0.000000     8.698066  \n","17205            159.483871   0.051613     8.698726  \n","\n","[3483 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-f4204069-d9e3-43b0-863d-14829c5791be\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TIME</th>\n","      <th> WOB (SURFACE)</th>\n","      <th> BIT DEPTH (SURFACE)</th>\n","      <th> DEPTH (SURFACE)</th>\n","      <th> ROP (SURFACE)</th>\n","      <th> BLOCK POSITION (SURFACE)</th>\n","      <th> RPM (SURFACE)</th>\n","      <th> HOOKLOAD (SURFACE)</th>\n","      <th> TORQUE (SURFACE)</th>\n","      <th> SPP (SURFACE)</th>\n","      <th> FLOW OUT (SURFACE)</th>\n","      <th> FLOW IN (SURFACE)</th>\n","      <th> TVA (SURFACE)</th>\n","      <th>GAIN LOSS</th>\n","      <th>AVERAGE ROP</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-09-30 07:00:00+03:00</td>\n","      <td>9.783333</td>\n","      <td>8736.283667</td>\n","      <td>8736.283667</td>\n","      <td>5.863333</td>\n","      <td>59.108333</td>\n","      <td>40.001000</td>\n","      <td>250.581667</td>\n","      <td>3.072500</td>\n","      <td>1440.566667</td>\n","      <td>16.650000</td>\n","      <td>449.683333</td>\n","      <td>365.918333</td>\n","      <td>0.005000</td>\n","      <td>2.140987</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-09-30 07:01:00+03:00</td>\n","      <td>11.678333</td>\n","      <td>8736.496000</td>\n","      <td>8736.496000</td>\n","      <td>15.805000</td>\n","      <td>58.883333</td>\n","      <td>39.884333</td>\n","      <td>248.641667</td>\n","      <td>3.810383</td>\n","      <td>1431.866667</td>\n","      <td>16.366667</td>\n","      <td>449.666667</td>\n","      <td>365.650000</td>\n","      <td>-0.001667</td>\n","      <td>8.130710</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-09-30 07:02:00+03:00</td>\n","      <td>15.778333</td>\n","      <td>8736.613000</td>\n","      <td>8736.613000</td>\n","      <td>2.055000</td>\n","      <td>58.795000</td>\n","      <td>39.801000</td>\n","      <td>244.603333</td>\n","      <td>4.018283</td>\n","      <td>1422.006667</td>\n","      <td>16.050000</td>\n","      <td>449.716667</td>\n","      <td>366.325000</td>\n","      <td>0.025000</td>\n","      <td>9.445737</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-09-30 07:03:00+03:00</td>\n","      <td>15.936667</td>\n","      <td>8736.785000</td>\n","      <td>8736.785000</td>\n","      <td>13.816667</td>\n","      <td>58.583333</td>\n","      <td>39.684333</td>\n","      <td>244.426667</td>\n","      <td>4.262550</td>\n","      <td>1418.086667</td>\n","      <td>16.600000</td>\n","      <td>449.666667</td>\n","      <td>367.048333</td>\n","      <td>0.000000</td>\n","      <td>8.708046</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-09-30 07:04:00+03:00</td>\n","      <td>17.283333</td>\n","      <td>8736.845000</td>\n","      <td>8736.845000</td>\n","      <td>0.675000</td>\n","      <td>58.500000</td>\n","      <td>39.767667</td>\n","      <td>243.113333</td>\n","      <td>4.079317</td>\n","      <td>1409.390000</td>\n","      <td>16.783333</td>\n","      <td>449.716667</td>\n","      <td>367.143333</td>\n","      <td>0.013333</td>\n","      <td>8.415334</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>17201</th>\n","      <td>2023-10-12 05:41:00+03:00</td>\n","      <td>1.776667</td>\n","      <td>9772.161333</td>\n","      <td>9772.161333</td>\n","      <td>29.615000</td>\n","      <td>47.305000</td>\n","      <td>38.317667</td>\n","      <td>202.886667</td>\n","      <td>2.256900</td>\n","      <td>2089.008333</td>\n","      <td>15.783333</td>\n","      <td>220.966667</td>\n","      <td>158.235000</td>\n","      <td>0.000000</td>\n","      <td>8.695717</td>\n","    </tr>\n","    <tr>\n","      <th>17202</th>\n","      <td>2023-10-12 05:42:00+03:00</td>\n","      <td>0.581667</td>\n","      <td>9772.480833</td>\n","      <td>9772.480833</td>\n","      <td>16.603333</td>\n","      <td>46.986667</td>\n","      <td>38.451000</td>\n","      <td>204.165000</td>\n","      <td>2.093467</td>\n","      <td>2088.306667</td>\n","      <td>15.933333</td>\n","      <td>221.066667</td>\n","      <td>158.196667</td>\n","      <td>0.015000</td>\n","      <td>8.696518</td>\n","    </tr>\n","    <tr>\n","      <th>17203</th>\n","      <td>2023-10-12 05:43:00+03:00</td>\n","      <td>0.000000</td>\n","      <td>9772.851500</td>\n","      <td>9772.851500</td>\n","      <td>22.546667</td>\n","      <td>46.625000</td>\n","      <td>38.367667</td>\n","      <td>205.506667</td>\n","      <td>1.953100</td>\n","      <td>2098.301667</td>\n","      <td>15.683333</td>\n","      <td>220.950000</td>\n","      <td>158.165000</td>\n","      <td>-0.016667</td>\n","      <td>8.697212</td>\n","    </tr>\n","    <tr>\n","      <th>17204</th>\n","      <td>2023-10-12 05:44:00+03:00</td>\n","      <td>0.000000</td>\n","      <td>9773.244667</td>\n","      <td>9773.244667</td>\n","      <td>23.805000</td>\n","      <td>46.231667</td>\n","      <td>38.401000</td>\n","      <td>205.900000</td>\n","      <td>1.983400</td>\n","      <td>2083.573333</td>\n","      <td>15.766667</td>\n","      <td>221.000000</td>\n","      <td>158.100000</td>\n","      <td>0.000000</td>\n","      <td>8.698066</td>\n","    </tr>\n","    <tr>\n","      <th>17205</th>\n","      <td>2023-10-12 05:45:00+03:00</td>\n","      <td>0.000000</td>\n","      <td>9773.543871</td>\n","      <td>9773.543871</td>\n","      <td>23.351613</td>\n","      <td>45.932258</td>\n","      <td>38.420355</td>\n","      <td>205.267742</td>\n","      <td>2.053774</td>\n","      <td>2080.796774</td>\n","      <td>15.741935</td>\n","      <td>221.161290</td>\n","      <td>159.483871</td>\n","      <td>0.051613</td>\n","      <td>8.698726</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3483 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f4204069-d9e3-43b0-863d-14829c5791be')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f4204069-d9e3-43b0-863d-14829c5791be button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f4204069-d9e3-43b0-863d-14829c5791be');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d6fa0c0f-6026-415c-b998-8b0549332a4d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d6fa0c0f-6026-415c-b998-8b0549332a4d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d6fa0c0f-6026-415c-b998-8b0549332a4d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0387ebaf-5c7d-460d-86af-f59928e74f04\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('drilling_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0387ebaf-5c7d-460d-86af-f59928e74f04 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('drilling_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"drilling_df","summary":"{\n  \"name\": \"drilling_df\",\n  \"rows\": 3483,\n  \"fields\": [\n    {\n      \"column\": \"TIME\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-09-30 07:00:00+03:00\",\n        \"max\": \"2023-10-12 05:45:00+03:00\",\n        \"num_unique_values\": 3483,\n        \"samples\": [\n          \"2023-10-09 17:26:00+03:00\",\n          \"2023-10-02 23:24:00+03:00\",\n          \"2023-10-03 08:18:00+03:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" WOB (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.843977075652124,\n        \"min\": 0.0,\n        \"max\": 119.81333333333333,\n        \"num_unique_values\": 3037,\n        \"samples\": [\n          7.443333333333333,\n          0.92,\n          20.503333333333334\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" BIT DEPTH (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 307.5855802628455,\n        \"min\": 8192.613333333333,\n        \"max\": 9838.389999999998,\n        \"num_unique_values\": 3372,\n        \"samples\": [\n          9714.674333333332,\n          9308.158833333333,\n          9651.2045\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" DEPTH (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 307.5855802628455,\n        \"min\": 8192.613333333333,\n        \"max\": 9838.389999999998,\n        \"num_unique_values\": 3372,\n        \"samples\": [\n          9714.674333333332,\n          9308.158833333333,\n          9651.2045\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" ROP (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101.59942763517773,\n        \"min\": 0.08333333333333333,\n        \"max\": 1880.0766666666668,\n        \"num_unique_values\": 2886,\n        \"samples\": [\n          39.86,\n          61.835,\n          50.79\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" BLOCK POSITION (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.04559349623469,\n        \"min\": 0.9299999999999999,\n        \"max\": 99.02333333333333,\n        \"num_unique_values\": 3115,\n        \"samples\": [\n          52.2,\n          83.15833333333333,\n          49.419999999999995\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" RPM (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 53.259223947599004,\n        \"min\": 0.0,\n        \"max\": 178.71866666666668,\n        \"num_unique_values\": 1016,\n        \"samples\": [\n          50.117666666666665,\n          171.31866666666667,\n          116.16866666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" HOOKLOAD (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.252510983381676,\n        \"min\": 43.7,\n        \"max\": 263.1166666666667,\n        \"num_unique_values\": 2944,\n        \"samples\": [\n          231.12833333333336,\n          238.765,\n          252.54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" TORQUE (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.5411711826096917,\n        \"min\": 0.0,\n        \"max\": 16.099016666666667,\n        \"num_unique_values\": 3380,\n        \"samples\": [\n          12.909283333333333,\n          7.413033333333333,\n          9.636633333333332\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" SPP (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 600.0447508311687,\n        \"min\": 0.0,\n        \"max\": 2756.7,\n        \"num_unique_values\": 3423,\n        \"samples\": [\n          2246.6566666666668,\n          984.8866666666667,\n          2053.903333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" FLOW OUT (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.978096868645156,\n        \"min\": 0.0,\n        \"max\": 17.866666666666667,\n        \"num_unique_values\": 263,\n        \"samples\": [\n          15.45,\n          15.383333333333333,\n          13.966666666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" FLOW IN (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 129.31844756365513,\n        \"min\": 0.0,\n        \"max\": 551.1666666666666,\n        \"num_unique_values\": 371,\n        \"samples\": [\n          163.16666666666666,\n          550.7333333333333,\n          449.65\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" TVA (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 135.79900207183218,\n        \"min\": 129.11333333333334,\n        \"max\": 639.08,\n        \"num_unique_values\": 3387,\n        \"samples\": [\n          592.685,\n          258.12333333333333,\n          185.88333333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GAIN LOSS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07765246551889887,\n        \"min\": -0.6033333333333332,\n        \"max\": 3.0100000000000002,\n        \"num_unique_values\": 421,\n        \"samples\": [\n          -0.01333333333333447,\n          0.07833333333333362,\n          -0.10999999999999849\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AVERAGE ROP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.259727687314089,\n        \"min\": 2.140987212838403,\n        \"max\": 25.152155002605223,\n        \"num_unique_values\": 3483,\n        \"samples\": [\n          8.968237364532262,\n          10.346290377721646,\n          11.920192275634237\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":286}],"source":["\"\"\"\"\n","#only get data when it is on bottom drilling and that is when bit depth == depth\n","drilling_df = df2[df2[' BIT DEPTH (SURFACE)'] == df2[' DEPTH (SURFACE)']]\n","drilling_df = drilling_df[drilling_df[' ROP (SURFACE)'] > 0]\n","drilling_df = drilling_df.reset_index()\n","drilling_df\n","\"\"\"\n","\n","#only get data when it is on bottom drilling and that is when bit depth == depth\n","drilling_df = df_resampled[df_resampled[' BIT DEPTH (SURFACE)'] == df_resampled[' DEPTH (SURFACE)']]\n","drilling_df = drilling_df[drilling_df[' ROP (SURFACE)'] > 0]\n","drilling_df\n"]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import tensorflow as tf\n","from sklearn.preprocessing import MinMaxScaler\n","from tensorflow.keras.models import Model\n","from tensorflow.keras.layers import Input, LSTM, RepeatVector, TimeDistributed, Dense\n","\n","# Drop non-numerical and unnecessary columns\n","data = drilling_df.drop(columns=['TIME','GAIN LOSS',' BLOCK POSITION (SURFACE)',' FLOW IN (SURFACE)',' DEPTH (SURFACE)',' RPM (SURFACE)','AVERAGE ROP'])\n","\n","# Normalize the data\n","scaler = MinMaxScaler()\n","data_scaled = scaler.fit_transform(data)\n","\n","# Convert the data into sequences\n","timesteps = 5  # Set the sequence length\n","def create_sequences(data, timesteps):\n","    sequences = []\n","    for i in range(len(data) - timesteps + 1):\n","        seq = data[i:i+timesteps]\n","        sequences.append(seq)\n","    return np.array(sequences)\n","\n","X = create_sequences(data_scaled, timesteps)\n","\n","\"\"\"\n","# Split the data into training and test sets\n","train_size = int(0.8 * len(X))\n","X_train, X_test = X[:train_size], X[train_size:]\n","\"\"\""],"metadata":{"id":"PEvJoD71I6tF","executionInfo":{"status":"ok","timestamp":1723823310785,"user_tz":-60,"elapsed":21,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"43ec1f75-9002-4340-a557-8533ac3f7533"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n# Split the data into training and test sets\\ntrain_size = int(0.8 * len(X))\\nX_train, X_test = X[:train_size], X[train_size:]\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":287}]},{"cell_type":"code","source":["# LSTM Autoencoder model\n","n_features = X.shape[2]\n","n_features"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Cx-8XGAuJqxo","executionInfo":{"status":"ok","timestamp":1723823310785,"user_tz":-60,"elapsed":20,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"d1707833-9bba-4e3e-b2be-546c96a878b9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8"]},"metadata":{},"execution_count":288}]},{"cell_type":"code","source":["from keras.layers import Input, LSTM, Dense, RepeatVector, TimeDistributed, Dropout\n","from keras.models import Model\n","\n","# Encoder\n","input_seq = Input(shape=(timesteps, n_features))\n","encoded = LSTM(128, activation='relu', return_sequences=False)(input_seq)\n","encoded = Dropout(0.2)(encoded)\n","latent = Dense(64, activation='relu')(encoded)\n","\n","# Decoder\n","decoded = RepeatVector(timesteps)(latent)\n","decoded = Dropout(0.2)(decoded)\n","decoded = LSTM(64, activation='relu', return_sequences=True)(decoded)\n","decoded = Dropout(0.2)(decoded)\n","decoded = LSTM(128, activation='relu', return_sequences=True)(decoded)\n","decoded = TimeDistributed(Dense(n_features))(decoded)\n","\n","# Autoencoder model\n","autoencoder = Model(input_seq, decoded)\n","autoencoder.compile(optimizer='adam', loss='mse')\n","autoencoder.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":479},"id":"u7sgXmG2JuRW","executionInfo":{"status":"ok","timestamp":1723823310785,"user_tz":-60,"elapsed":17,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"5253f60c-f919-4ae8-dfd2-5b431f537762"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["\u001b[1mModel: \"functional_20\"\u001b[0m\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"functional_20\"</span>\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ input_layer_22 (\u001b[38;5;33mInputLayer\u001b[0m)          │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m5\u001b[0m, \u001b[38;5;34m8\u001b[0m)                │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ lstm_77 (\u001b[38;5;33mLSTM\u001b[0m)                       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)                 │          \u001b[38;5;34m70,144\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout_63 (\u001b[38;5;33mDropout\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)                 │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_31 (\u001b[38;5;33mDense\u001b[0m)                     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)                  │           \u001b[38;5;34m8,256\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ repeat_vector_21 (\u001b[38;5;33mRepeatVector\u001b[0m)      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m5\u001b[0m, \u001b[38;5;34m64\u001b[0m)               │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout_64 (\u001b[38;5;33mDropout\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m5\u001b[0m, \u001b[38;5;34m64\u001b[0m)               │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ lstm_78 (\u001b[38;5;33mLSTM\u001b[0m)                       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m5\u001b[0m, \u001b[38;5;34m64\u001b[0m)               │          \u001b[38;5;34m33,024\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout_65 (\u001b[38;5;33mDropout\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m5\u001b[0m, \u001b[38;5;34m64\u001b[0m)               │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ lstm_79 (\u001b[38;5;33mLSTM\u001b[0m)                       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m5\u001b[0m, \u001b[38;5;34m128\u001b[0m)              │          \u001b[38;5;34m98,816\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ time_distributed_20                  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m5\u001b[0m, \u001b[38;5;34m8\u001b[0m)                │           \u001b[38;5;34m1,032\u001b[0m │\n","│ (\u001b[38;5;33mTimeDistributed\u001b[0m)                    │                             │                 │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ input_layer_22 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)          │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">5</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">8</span>)                │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ lstm_77 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)                 │          <span style=\"color: #00af00; text-decoration-color: #00af00\">70,144</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout_63 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)                 │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_31 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)                  │           <span style=\"color: #00af00; text-decoration-color: #00af00\">8,256</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ repeat_vector_21 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">RepeatVector</span>)      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">5</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout_64 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">5</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ lstm_78 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">5</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │          <span style=\"color: #00af00; text-decoration-color: #00af00\">33,024</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout_65 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">5</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ lstm_79 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">5</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)              │          <span style=\"color: #00af00; text-decoration-color: #00af00\">98,816</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ time_distributed_20                  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">5</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">8</span>)                │           <span style=\"color: #00af00; text-decoration-color: #00af00\">1,032</span> │\n","│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">TimeDistributed</span>)                    │                             │                 │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m211,272\u001b[0m (825.28 KB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">211,272</span> (825.28 KB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m211,272\u001b[0m (825.28 KB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">211,272</span> (825.28 KB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n","</pre>\n"]},"metadata":{}}]},{"cell_type":"code","source":["# Train with EarlyStopping\n","from keras.callbacks import EarlyStopping\n","early_stopping = EarlyStopping(monitor='val_loss', patience=5, restore_best_weights=True)\n","history = autoencoder.fit(X, X, epochs=50, batch_size=32, validation_split=0.2, callbacks=[early_stopping])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5rJmY7vgJw6L","executionInfo":{"status":"ok","timestamp":1723823336485,"user_tz":-60,"elapsed":25716,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"46572784-3582-4b89-a371-6957538a2011"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 59ms/step - loss: 0.2157 - val_loss: 0.0410\n","Epoch 2/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 18ms/step - loss: 0.0183 - val_loss: 0.0122\n","Epoch 3/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 6ms/step - loss: 0.0080 - val_loss: 0.0087\n","Epoch 4/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 0.0046 - val_loss: 0.0058\n","Epoch 5/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 0.0033 - val_loss: 0.0064\n","Epoch 6/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0028 - val_loss: 0.0057\n","Epoch 7/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 0.0025 - val_loss: 0.0070\n","Epoch 8/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 0.0022 - val_loss: 0.0056\n","Epoch 9/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 6ms/step - loss: 0.0018 - val_loss: 0.0056\n","Epoch 10/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 6ms/step - loss: 0.0020 - val_loss: 0.0056\n","Epoch 11/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 6ms/step - loss: 0.0018 - val_loss: 0.0053\n","Epoch 12/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 6ms/step - loss: 0.0017 - val_loss: 0.0054\n","Epoch 13/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0014 - val_loss: 0.0053\n","Epoch 14/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 6ms/step - loss: 0.0014 - val_loss: 0.0056\n","Epoch 15/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 0.0014 - val_loss: 0.0052\n","Epoch 16/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 0.0012 - val_loss: 0.0050\n","Epoch 17/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0014 - val_loss: 0.0056\n","Epoch 18/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 0.0013 - val_loss: 0.0052\n","Epoch 19/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0013 - val_loss: 0.0054\n","Epoch 20/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 0.0012 - val_loss: 0.0056\n","Epoch 21/50\n","\u001b[1m87/87\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 0.0014 - val_loss: 0.0055\n"]}]},{"cell_type":"code","source":["from matplotlib import pyplot as plt\n","\n","# Plotting the training and validation loss\n","plt.plot(history.history['loss'], label='Training loss')\n","plt.plot(history.history['val_loss'], label='Validation loss')\n","\n","# Adding labels to the axes\n","plt.xlabel('Epochs')\n","plt.ylabel('Loss')\n","\n","# Adding a legend\n","plt.legend()\n","\n","# Display the plot\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"s1Rwz3sLLwsZ","executionInfo":{"status":"ok","timestamp":1723823336485,"user_tz":-60,"elapsed":26,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"e3b07db1-9bf4-4f6a-e2ab-2961d277363f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7d185c4d4850>"]},"metadata":{},"execution_count":291},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["reconstructed_data = autoencoder.predict(X)\n","reconstuction_errors = np.mean(np.square(X- reconstructed_data), axis = 1)\n","plt.hist(reconstuction_errors, bins=30)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"collapsed":true,"id":"GQ4Abh-aNEe1","executionInfo":{"status":"ok","timestamp":1723823340913,"user_tz":-60,"elapsed":4449,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"e409570d-e1b9-4165-d7d3-85ce1ea5df3a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m109/109\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 10ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["(array([[3.150e+03, 1.170e+02, 2.010e+02, 1.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 4.000e+00, 4.000e+00, 2.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],\n","        [3.468e+03, 4.000e+00, 0.000e+00, 1.000e+00, 0.000e+00, 0.000e+00,\n","         1.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 1.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 1.000e+00, 0.000e+00,\n","         0.000e+00, 1.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 2.000e+00],\n","        [3.447e+03, 1.000e+01, 3.000e+00, 4.000e+00, 1.000e+00, 2.000e+00,\n","         6.000e+00, 2.000e+00, 4.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],\n","        [3.425e+03, 2.500e+01, 2.000e+00, 1.000e+00, 0.000e+00, 4.000e+00,\n","         7.000e+00, 0.000e+00, 3.000e+00, 1.000e+00, 1.000e+00, 0.000e+00,\n","         1.000e+00, 0.000e+00, 2.000e+00, 5.000e+00, 2.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],\n","        [3.386e+03, 4.900e+01, 1.300e+01, 1.400e+01, 5.000e+00, 6.000e+00,\n","         2.000e+00, 2.000e+00, 1.000e+00, 1.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],\n","        [3.174e+03, 9.200e+01, 2.400e+01, 6.700e+01, 6.900e+01, 4.000e+01,\n","         7.000e+00, 1.000e+00, 0.000e+00, 1.000e+00, 0.000e+00, 2.000e+00,\n","         0.000e+00, 1.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 1.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],\n","        [3.385e+03, 1.300e+01, 6.400e+01, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 1.000e+00,\n","         1.000e+00, 1.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 3.000e+00,\n","         3.000e+00, 5.000e+00, 0.000e+00, 1.000e+00, 0.000e+00, 0.000e+00,\n","         1.000e+00, 1.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],\n","        [3.387e+03, 7.500e+01, 6.000e+00, 1.000e+00, 0.000e+00, 3.000e+00,\n","         2.000e+00, 0.000e+00, 1.000e+00, 2.000e+00, 1.000e+00, 1.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00]]),\n"," array([6.12746573e-08, 8.63255285e-03, 1.72650444e-02, 2.58975360e-02,\n","        3.45300276e-02, 4.31625191e-02, 5.17950107e-02, 6.04275023e-02,\n","        6.90599938e-02, 7.76924854e-02, 8.63249770e-02, 9.49574686e-02,\n","        1.03589960e-01, 1.12222452e-01, 1.20854943e-01, 1.29487435e-01,\n","        1.38119926e-01, 1.46752418e-01, 1.55384910e-01, 1.64017401e-01,\n","        1.72649893e-01, 1.81282384e-01, 1.89914876e-01, 1.98547367e-01,\n","        2.07179859e-01, 2.15812351e-01, 2.24444842e-01, 2.33077334e-01,\n","        2.41709825e-01, 2.50342317e-01, 2.58974808e-01]),\n"," <a list of 8 BarContainer objects>)"]},"metadata":{},"execution_count":292},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["threshold = np.percentile(reconstuction_errors,99)\n","anomalies = np.where(reconstuction_errors > threshold)[0]\n","#print(\"Detected Anomalies: \", anomalies)\n","anomalies.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UKbSjNZbPMV9","executionInfo":{"status":"ok","timestamp":1723823340913,"user_tz":-60,"elapsed":35,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"1ccc59c2-3428-4319-8079-123a5e21f9ca"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(279,)"]},"metadata":{},"execution_count":293}]},{"cell_type":"code","source":["trainPredict = autoencoder.predict(X)\n","trainMAE = np.mean(np.abs(trainPredict - X), axis=1)\n","plt.hist(trainMAE, bins=30)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"collapsed":true,"id":"HKrCfkpIL4SV","executionInfo":{"status":"ok","timestamp":1723823340913,"user_tz":-60,"elapsed":33,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"44dc994d-66ad-4a1b-a3d3-45648822e8fc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m109/109\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["(array([[1.961e+03, 8.400e+02, 2.050e+02, 8.100e+01, 3.700e+01, 3.100e+01,\n","         4.600e+01, 4.700e+01, 1.070e+02, 1.030e+02, 1.100e+01, 0.000e+00,\n","         1.000e+00, 2.000e+00, 6.000e+00, 1.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],\n","        [1.705e+03, 8.480e+02, 3.410e+02, 3.850e+02, 1.390e+02, 5.000e+01,\n","         2.000e+00, 2.000e+00, 0.000e+00, 0.000e+00, 1.000e+00, 0.000e+00,\n","         0.000e+00, 1.000e+00, 0.000e+00, 1.000e+00, 1.000e+00, 0.000e+00,\n","         1.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 1.000e+00, 0.000e+00, 0.000e+00, 1.000e+00],\n","        [2.640e+03, 2.970e+02, 4.890e+02, 9.000e+00, 1.100e+01, 8.000e+00,\n","         4.000e+00, 0.000e+00, 1.000e+00, 5.000e+00, 3.000e+00, 2.000e+00,\n","         1.000e+00, 3.000e+00, 4.000e+00, 1.000e+00, 1.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],\n","        [2.516e+03, 4.980e+02, 1.210e+02, 1.310e+02, 1.290e+02, 5.000e+01,\n","         5.000e+00, 2.000e+00, 0.000e+00, 8.000e+00, 4.000e+00, 3.000e+00,\n","         6.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 1.000e+00, 0.000e+00,\n","         0.000e+00, 1.000e+00, 1.000e+00, 3.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],\n","        [2.098e+03, 9.310e+02, 1.930e+02, 1.030e+02, 4.500e+01, 3.300e+01,\n","         1.700e+01, 2.100e+01, 1.100e+01, 9.000e+00, 5.000e+00, 3.000e+00,\n","         4.000e+00, 2.000e+00, 2.000e+00, 1.000e+00, 1.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],\n","        [1.003e+03, 8.720e+02, 7.350e+02, 3.150e+02, 1.820e+02, 9.300e+01,\n","         2.300e+01, 3.900e+01, 1.900e+01, 1.000e+01, 5.900e+01, 1.300e+01,\n","         6.500e+01, 3.500e+01, 1.200e+01, 2.000e+00, 0.000e+00, 0.000e+00,\n","         1.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 1.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],\n","        [2.310e+03, 7.640e+02, 1.260e+02, 9.200e+01, 4.700e+01, 4.800e+01,\n","         3.000e+00, 4.000e+00, 8.000e+00, 6.000e+01, 0.000e+00, 4.000e+00,\n","         2.000e+00, 1.000e+00, 1.000e+00, 1.000e+00, 0.000e+00, 2.000e+00,\n","         0.000e+00, 1.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         1.000e+00, 1.000e+00, 1.000e+00, 1.000e+00, 0.000e+00, 1.000e+00],\n","        [1.320e+03, 9.390e+02, 7.290e+02, 2.070e+02, 1.350e+02, 1.010e+02,\n","         9.000e+00, 8.000e+00, 2.100e+01, 3.000e+00, 1.000e+00, 1.000e+00,\n","         1.000e+00, 0.000e+00, 0.000e+00, 3.000e+00, 0.000e+00, 0.000e+00,\n","         1.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,\n","         0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00]]),\n"," array([1.82028171e-04, 1.59996584e-02, 3.18172886e-02, 4.76349187e-02,\n","        6.34525489e-02, 7.92701791e-02, 9.50878093e-02, 1.10905439e-01,\n","        1.26723070e-01, 1.42540700e-01, 1.58358330e-01, 1.74175960e-01,\n","        1.89993590e-01, 2.05811221e-01, 2.21628851e-01, 2.37446481e-01,\n","        2.53264111e-01, 2.69081741e-01, 2.84899372e-01, 3.00717002e-01,\n","        3.16534632e-01, 3.32352262e-01, 3.48169892e-01, 3.63987523e-01,\n","        3.79805153e-01, 3.95622783e-01, 4.11440413e-01, 4.27258043e-01,\n","        4.43075673e-01, 4.58893304e-01, 4.74710934e-01]),\n"," <a list of 8 BarContainer objects>)"]},"metadata":{},"execution_count":294},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["testPred = autoencoder.predict(X)\n","print(\"Prediction: \\n\", testPred)\n","print(\"Prediction shape: \", testPred.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"id":"6efc1aExMCCb","executionInfo":{"status":"ok","timestamp":1723823340914,"user_tz":-60,"elapsed":29,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"1afc22de-3123-4c20-fe2a-7c9363ef0acb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m109/109\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step\n","Prediction: \n"," [[[ 1.28328294e-01  3.48006189e-01  9.30751860e-03 ...  5.35204470e-01\n","    8.87088060e-01  4.59354490e-01]\n","  [ 1.34068340e-01  3.15377414e-01  4.34768572e-03 ...  5.05584002e-01\n","    9.28235590e-01  4.65951681e-01]\n","  [ 1.35487318e-01  3.00636053e-01  1.36229396e-03 ...  4.70602274e-01\n","    9.33139801e-01  4.53927696e-01]\n","  [ 1.35146976e-01  2.95521855e-01 -4.78550792e-05 ...  4.43777144e-01\n","    9.26120758e-01  4.41289991e-01]\n","  [ 1.35321587e-01  2.98390746e-01 -1.02886558e-03 ...  4.30204570e-01\n","    9.25077617e-01  4.34199303e-01]]\n","\n"," [[ 1.30768418e-01  3.48154068e-01  9.46062058e-03 ...  5.39871156e-01\n","    8.90690923e-01  4.52313930e-01]\n","  [ 1.36908442e-01  3.15809250e-01  4.28208709e-03 ...  5.08564293e-01\n","    9.29323554e-01  4.58340943e-01]\n","  [ 1.38893068e-01  3.02230000e-01  1.24082714e-03 ...  4.75031912e-01\n","    9.33747888e-01  4.47391808e-01]\n","  [ 1.38957217e-01  2.97887444e-01 -1.78519636e-04 ...  4.49994087e-01\n","    9.26577926e-01  4.36065108e-01]\n","  [ 1.39379412e-01  3.01140189e-01 -1.10810250e-03 ...  4.37747777e-01\n","    9.25262332e-01  4.30059344e-01]]\n","\n"," [[ 1.32341042e-01  3.49047750e-01  9.57010873e-03 ...  5.43461323e-01\n","    8.93612087e-01  4.49681103e-01]\n","  [ 1.38704002e-01  3.16864431e-01  4.19006124e-03 ...  5.11055887e-01\n","    9.30177569e-01  4.55210596e-01]\n","  [ 1.41015500e-01  3.04071784e-01  1.05087459e-03 ...  4.78522599e-01\n","    9.34334338e-01  4.44888204e-01]\n","  [ 1.41290024e-01  3.00210059e-01 -4.12013382e-04 ...  4.54602599e-01\n","    9.27083194e-01  4.34294611e-01]\n","  [ 1.41830146e-01  3.03687364e-01 -1.33340806e-03 ...  4.43155706e-01\n","    9.25632894e-01  4.28886801e-01]]\n","\n"," ...\n","\n"," [[ 5.63620813e-02  7.01820612e-01  2.92558223e-02 ...  3.67341995e-01\n","    8.86536777e-01  1.12678386e-01]\n","  [ 6.22997209e-02  7.11538851e-01  2.32261010e-02 ...  3.58245194e-01\n","    9.04938281e-01  1.02398947e-01]\n","  [ 6.35511205e-02  7.17046320e-01  2.16362402e-02 ...  3.52003753e-01\n","    9.06406164e-01  9.54850614e-02]\n","  [ 6.39316738e-02  7.18871534e-01  2.09105164e-02 ...  3.50115478e-01\n","    9.04696345e-01  9.22618434e-02]\n","  [ 6.40454814e-02  7.20825613e-01  2.07377132e-02 ...  3.50087643e-01\n","    9.04388905e-01  9.01142061e-02]]\n","\n"," [[ 7.84138665e-02  6.42493606e-01  1.86290145e-02 ...  5.43953001e-01\n","    8.91263843e-01  1.53831184e-01]\n","  [ 8.67738947e-02  6.59275115e-01  1.80578157e-02 ...  5.61299086e-01\n","    9.22676802e-01  1.38748243e-01]\n","  [ 9.09475014e-02  6.66431367e-01  1.64323859e-02 ...  5.71630955e-01\n","    9.33191001e-01  1.35797888e-01]\n","  [ 9.34293345e-02  6.67825282e-01  1.41809341e-02 ...  5.80966353e-01\n","    9.32901025e-01  1.37505829e-01]\n","  [ 9.45598334e-02  6.70798302e-01  1.23182721e-02 ...  5.90755820e-01\n","    9.32562351e-01  1.40492052e-01]]\n","\n"," [[ 3.18291187e-02  8.18300426e-01  3.81575562e-02 ...  3.42125356e-01\n","    8.74711335e-01  1.39529616e-01]\n","  [ 4.72802669e-02  8.35022867e-01  3.69173177e-02 ...  3.43408704e-01\n","    8.85434389e-01  1.30628079e-01]\n","  [ 4.24742177e-02  8.35559905e-01  3.80277857e-02 ...  3.46639872e-01\n","    8.79626751e-01  1.25605315e-01]\n","  [ 4.09820974e-02  8.40902507e-01  3.74616906e-02 ...  3.49180460e-01\n","    8.84187341e-01  1.24892920e-01]\n","  [ 3.89901698e-02  8.41677487e-01  3.74607295e-02 ...  3.49237263e-01\n","    8.83526504e-01  1.23171821e-01]]]\n","Prediction shape:  (3479, 5, 8)\n"]}]},{"cell_type":"code","source":["reconstructed_sequences = autoencoder.predict(X)\n","\n","# Step 3: Reshape and inverse transform\n","# Reshape back to 2D (since we used sequences)\n","n_samples = X.shape[0]\n","n_timesteps = X.shape[1]\n","n_features = X.shape[2]\n","\n","# Flatten the sequences into 2D\n","X_flat = X.reshape(-1, n_features)\n","reconstructed_flat = reconstructed_sequences.reshape(-1, n_features)\n","\n","# Inverse transform to get back to original scale\n","data_reconstructed = scaler.inverse_transform(reconstructed_flat)\n","data_actual = scaler.inverse_transform(X_flat)\n","\n","# Step 4: Create DataFrames\n","# Convert back to original shape and add to DataFrame\n","df_actual = pd.DataFrame(data_actual, columns=data.columns)\n","df_reconstructed = pd.DataFrame(data_reconstructed, columns=data.columns)\n","# Display the comparison\n","df_actual"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":459},"id":"_0MpliexMJ0m","executionInfo":{"status":"ok","timestamp":1723823341706,"user_tz":-60,"elapsed":818,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"38fa46db-6ad4-4fa4-ebd9-802e225b35d2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m109/109\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["        WOB (SURFACE)   BIT DEPTH (SURFACE)   ROP (SURFACE)  \\\n","0                  9.783333                 8736.283667              5.863333   \n","1                 11.678333                 8736.496000             15.805000   \n","2                 15.778333                 8736.613000              2.055000   \n","3                 15.936667                 8736.785000             13.816667   \n","4                 17.283333                 8736.845000              0.675000   \n","...                     ...                         ...                   ...   \n","17390              1.776667                 9772.161333             29.615000   \n","17391              0.581667                 9772.480833             16.603333   \n","17392              0.000000                 9772.851500             22.546667   \n","17393              0.000000                 9773.244667             23.805000   \n","17394              0.000000                 9773.543871             23.351613   \n","\n","        HOOKLOAD (SURFACE)   TORQUE (SURFACE)  \\\n","0                     250.581667                 3.072500   \n","1                     248.641667                 3.810383   \n","2                     244.603333                 4.018283   \n","3                     244.426667                 4.262550   \n","4                     243.113333                 4.079317   \n","...                          ...                      ...   \n","17390                 202.886667                 2.256900   \n","17391                 204.165000                 2.093467   \n","17392                 205.506667                 1.953100   \n","17393                 205.900000                 1.983400   \n","17394                 205.267742                 2.053774   \n","\n","        SPP (SURFACE)   FLOW OUT (SURFACE)   TVA (SURFACE)  \n","0               1440.566667                  16.650000            365.918333  \n","1               1431.866667                  16.366667            365.650000  \n","2               1422.006667                  16.050000            366.325000  \n","3               1418.086667                  16.600000            367.048333  \n","4               1409.390000                  16.783333            367.143333  \n","...                     ...                        ...                   ...  \n","17390           2089.008333                  15.783333            158.235000  \n","17391           2088.306667                  15.933333            158.196667  \n","17392           2098.301667                  15.683333            158.165000  \n","17393           2083.573333                  15.766667            158.100000  \n","17394           2080.796774                  15.741935            159.483871  \n","\n","[17395 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-e46f4971-7a27-48e4-945b-049e25d14856\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th> WOB (SURFACE)</th>\n","      <th> BIT DEPTH (SURFACE)</th>\n","      <th> ROP (SURFACE)</th>\n","      <th> HOOKLOAD (SURFACE)</th>\n","      <th> TORQUE (SURFACE)</th>\n","      <th> SPP (SURFACE)</th>\n","      <th> FLOW OUT (SURFACE)</th>\n","      <th> TVA (SURFACE)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9.783333</td>\n","      <td>8736.283667</td>\n","      <td>5.863333</td>\n","      <td>250.581667</td>\n","      <td>3.072500</td>\n","      <td>1440.566667</td>\n","      <td>16.650000</td>\n","      <td>365.918333</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>11.678333</td>\n","      <td>8736.496000</td>\n","      <td>15.805000</td>\n","      <td>248.641667</td>\n","      <td>3.810383</td>\n","      <td>1431.866667</td>\n","      <td>16.366667</td>\n","      <td>365.650000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>15.778333</td>\n","      <td>8736.613000</td>\n","      <td>2.055000</td>\n","      <td>244.603333</td>\n","      <td>4.018283</td>\n","      <td>1422.006667</td>\n","      <td>16.050000</td>\n","      <td>366.325000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>15.936667</td>\n","      <td>8736.785000</td>\n","      <td>13.816667</td>\n","      <td>244.426667</td>\n","      <td>4.262550</td>\n","      <td>1418.086667</td>\n","      <td>16.600000</td>\n","      <td>367.048333</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17.283333</td>\n","      <td>8736.845000</td>\n","      <td>0.675000</td>\n","      <td>243.113333</td>\n","      <td>4.079317</td>\n","      <td>1409.390000</td>\n","      <td>16.783333</td>\n","      <td>367.143333</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>17390</th>\n","      <td>1.776667</td>\n","      <td>9772.161333</td>\n","      <td>29.615000</td>\n","      <td>202.886667</td>\n","      <td>2.256900</td>\n","      <td>2089.008333</td>\n","      <td>15.783333</td>\n","      <td>158.235000</td>\n","    </tr>\n","    <tr>\n","      <th>17391</th>\n","      <td>0.581667</td>\n","      <td>9772.480833</td>\n","      <td>16.603333</td>\n","      <td>204.165000</td>\n","      <td>2.093467</td>\n","      <td>2088.306667</td>\n","      <td>15.933333</td>\n","      <td>158.196667</td>\n","    </tr>\n","    <tr>\n","      <th>17392</th>\n","      <td>0.000000</td>\n","      <td>9772.851500</td>\n","      <td>22.546667</td>\n","      <td>205.506667</td>\n","      <td>1.953100</td>\n","      <td>2098.301667</td>\n","      <td>15.683333</td>\n","      <td>158.165000</td>\n","    </tr>\n","    <tr>\n","      <th>17393</th>\n","      <td>0.000000</td>\n","      <td>9773.244667</td>\n","      <td>23.805000</td>\n","      <td>205.900000</td>\n","      <td>1.983400</td>\n","      <td>2083.573333</td>\n","      <td>15.766667</td>\n","      <td>158.100000</td>\n","    </tr>\n","    <tr>\n","      <th>17394</th>\n","      <td>0.000000</td>\n","      <td>9773.543871</td>\n","      <td>23.351613</td>\n","      <td>205.267742</td>\n","      <td>2.053774</td>\n","      <td>2080.796774</td>\n","      <td>15.741935</td>\n","      <td>159.483871</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>17395 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e46f4971-7a27-48e4-945b-049e25d14856')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e46f4971-7a27-48e4-945b-049e25d14856 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e46f4971-7a27-48e4-945b-049e25d14856');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-667233ca-7b8c-4954-9f66-268953ad2dc0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-667233ca-7b8c-4954-9f66-268953ad2dc0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-667233ca-7b8c-4954-9f66-268953ad2dc0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_fd01a51e-0243-40e1-b6a2-5749c88883f3\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_actual')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_fd01a51e-0243-40e1-b6a2-5749c88883f3 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_actual');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_actual","summary":"{\n  \"name\": \"df_actual\",\n  \"rows\": 17395,\n  \"fields\": [\n    {\n      \"column\": \" WOB (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.840994711144203,\n        \"min\": 0.0,\n        \"max\": 119.81333333333332,\n        \"num_unique_values\": 3035,\n        \"samples\": [\n          22.009999999999998,\n          22.478333333333335,\n          7.5133333333333345\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" BIT DEPTH (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 307.1701781942658,\n        \"min\": 8192.613333333333,\n        \"max\": 9838.389999999998,\n        \"num_unique_values\": 3372,\n        \"samples\": [\n          9714.674333333332,\n          9308.158833333333,\n          9651.2045\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" ROP (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101.64260987834457,\n        \"min\": 0.08333333333333333,\n        \"max\": 1880.0766666666668,\n        \"num_unique_values\": 2876,\n        \"samples\": [\n          13.338333333333333,\n          19.2,\n          24.375\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" HOOKLOAD (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.227292905950549,\n        \"min\": 43.7,\n        \"max\": 263.1166666666667,\n        \"num_unique_values\": 2930,\n        \"samples\": [\n          233.86166666666668,\n          239.795,\n          244.76999999999998\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" TORQUE (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.540843162494291,\n        \"min\": 0.0,\n        \"max\": 16.099016666666667,\n        \"num_unique_values\": 3380,\n        \"samples\": [\n          12.909283333333333,\n          7.413033333333333,\n          9.636633333333332\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" SPP (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 600.2067339915436,\n        \"min\": 0.0,\n        \"max\": 2756.7,\n        \"num_unique_values\": 3422,\n        \"samples\": [\n          2247.3799999999997,\n          2074.9616666666666,\n          2053.903333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" FLOW OUT (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.978459913920378,\n        \"min\": 0.0,\n        \"max\": 17.866666666666667,\n        \"num_unique_values\": 263,\n        \"samples\": [\n          15.45,\n          15.383333333333333,\n          13.966666666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" TVA (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 135.8010789734364,\n        \"min\": 129.11333333333334,\n        \"max\": 639.08,\n        \"num_unique_values\": 3387,\n        \"samples\": [\n          592.685,\n          258.12333333333333,\n          185.88333333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":296}]},{"cell_type":"code","source":["df_reconstructed"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"nYx1nRl6N1Aj","executionInfo":{"status":"ok","timestamp":1723823341706,"user_tz":-60,"elapsed":21,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"ebee12e1-ced5-49b0-8f42-e967f74f9ef0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        WOB (SURFACE)   BIT DEPTH (SURFACE)   ROP (SURFACE)  \\\n","0                 15.375441                 8765.353516             17.581406   \n","1                 16.063175                 8711.654297              8.256953   \n","2                 16.233187                 8687.393555              2.644437   \n","3                 16.192410                 8678.976562             -0.006634   \n","4                 16.213331                 8683.697266             -1.850927   \n","...                     ...                         ...                   ...   \n","17390              3.813553                 9539.353516             71.819283   \n","17391              5.664806                 9566.874023             69.487648   \n","17392              5.088978                 9567.758789             71.575317   \n","17393              4.910202                 9576.550781             70.511063   \n","17394              4.671542                 9577.826172             70.509254   \n","\n","        HOOKLOAD (SURFACE)   TORQUE (SURFACE)  \\\n","0                     232.790573                 5.308441   \n","1                     240.623032                 5.097536   \n","2                     241.103134                 4.846990   \n","3                     239.424667                 4.671498   \n","4                     239.074509                 4.600069   \n","...                          ...                      ...   \n","17390                 233.933868                 2.076470   \n","17391                 236.954391                 2.270736   \n","17392                 237.486908                 2.329022   \n","17393                 238.792175                 2.301021   \n","17394                 239.017639                 2.267968   \n","\n","        SPP (SURFACE)   FLOW OUT (SURFACE)   TVA (SURFACE)  \n","0               1475.398193                  15.849307            363.368805  \n","1               1393.743408                  16.584476            366.733185  \n","2               1297.309326                  16.672098            360.601349  \n","3               1223.360474                  16.546690            354.156525  \n","4               1185.944946                  16.528053            350.540497  \n","...                     ...                        ...                   ...  \n","17390            943.136963                  15.628176            200.268784  \n","17391            946.674744                  15.819761            195.729294  \n","17392            955.582153                  15.715998            193.167847  \n","17393            962.585754                  15.797481            192.804550  \n","17394            962.742371                  15.785673            191.926865  \n","\n","[17395 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-cd1c2a00-cf42-4c11-923f-04a5a907fb08\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th> WOB (SURFACE)</th>\n","      <th> BIT DEPTH (SURFACE)</th>\n","      <th> ROP (SURFACE)</th>\n","      <th> HOOKLOAD (SURFACE)</th>\n","      <th> TORQUE (SURFACE)</th>\n","      <th> SPP (SURFACE)</th>\n","      <th> FLOW OUT (SURFACE)</th>\n","      <th> TVA (SURFACE)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>15.375441</td>\n","      <td>8765.353516</td>\n","      <td>17.581406</td>\n","      <td>232.790573</td>\n","      <td>5.308441</td>\n","      <td>1475.398193</td>\n","      <td>15.849307</td>\n","      <td>363.368805</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>16.063175</td>\n","      <td>8711.654297</td>\n","      <td>8.256953</td>\n","      <td>240.623032</td>\n","      <td>5.097536</td>\n","      <td>1393.743408</td>\n","      <td>16.584476</td>\n","      <td>366.733185</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>16.233187</td>\n","      <td>8687.393555</td>\n","      <td>2.644437</td>\n","      <td>241.103134</td>\n","      <td>4.846990</td>\n","      <td>1297.309326</td>\n","      <td>16.672098</td>\n","      <td>360.601349</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>16.192410</td>\n","      <td>8678.976562</td>\n","      <td>-0.006634</td>\n","      <td>239.424667</td>\n","      <td>4.671498</td>\n","      <td>1223.360474</td>\n","      <td>16.546690</td>\n","      <td>354.156525</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>16.213331</td>\n","      <td>8683.697266</td>\n","      <td>-1.850927</td>\n","      <td>239.074509</td>\n","      <td>4.600069</td>\n","      <td>1185.944946</td>\n","      <td>16.528053</td>\n","      <td>350.540497</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>17390</th>\n","      <td>3.813553</td>\n","      <td>9539.353516</td>\n","      <td>71.819283</td>\n","      <td>233.933868</td>\n","      <td>2.076470</td>\n","      <td>943.136963</td>\n","      <td>15.628176</td>\n","      <td>200.268784</td>\n","    </tr>\n","    <tr>\n","      <th>17391</th>\n","      <td>5.664806</td>\n","      <td>9566.874023</td>\n","      <td>69.487648</td>\n","      <td>236.954391</td>\n","      <td>2.270736</td>\n","      <td>946.674744</td>\n","      <td>15.819761</td>\n","      <td>195.729294</td>\n","    </tr>\n","    <tr>\n","      <th>17392</th>\n","      <td>5.088978</td>\n","      <td>9567.758789</td>\n","      <td>71.575317</td>\n","      <td>237.486908</td>\n","      <td>2.329022</td>\n","      <td>955.582153</td>\n","      <td>15.715998</td>\n","      <td>193.167847</td>\n","    </tr>\n","    <tr>\n","      <th>17393</th>\n","      <td>4.910202</td>\n","      <td>9576.550781</td>\n","      <td>70.511063</td>\n","      <td>238.792175</td>\n","      <td>2.301021</td>\n","      <td>962.585754</td>\n","      <td>15.797481</td>\n","      <td>192.804550</td>\n","    </tr>\n","    <tr>\n","      <th>17394</th>\n","      <td>4.671542</td>\n","      <td>9577.826172</td>\n","      <td>70.509254</td>\n","      <td>239.017639</td>\n","      <td>2.267968</td>\n","      <td>962.742371</td>\n","      <td>15.785673</td>\n","      <td>191.926865</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>17395 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cd1c2a00-cf42-4c11-923f-04a5a907fb08')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cd1c2a00-cf42-4c11-923f-04a5a907fb08 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cd1c2a00-cf42-4c11-923f-04a5a907fb08');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-69383d81-8d35-4d8c-b3cc-fd0e8a9de514\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-69383d81-8d35-4d8c-b3cc-fd0e8a9de514')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-69383d81-8d35-4d8c-b3cc-fd0e8a9de514 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b76f7b47-50d0-4841-8fd6-91f28b188147\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_reconstructed')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b76f7b47-50d0-4841-8fd6-91f28b188147 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_reconstructed');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_reconstructed","summary":"{\n  \"name\": \"df_reconstructed\",\n  \"rows\": 17395,\n  \"fields\": [\n    {\n      \"column\": \" WOB (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 17380,\n        \"samples\": [\n          3.9071502685546875,\n          8.691048622131348,\n          17.440431594848633\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" BIT DEPTH (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 17083,\n        \"samples\": [\n          9429.2021484375,\n          9310.57421875,\n          9412.77734375\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" ROP (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 17357,\n        \"samples\": [\n          67.76620483398438,\n          54.54454040527344,\n          64.07334899902344\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" HOOKLOAD (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 17164,\n        \"samples\": [\n          231.9713134765625,\n          241.8777313232422,\n          238.25401306152344\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" TORQUE (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 17357,\n        \"samples\": [\n          2.162247896194458,\n          2.000565767288208,\n          2.0003883838653564\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" SPP (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 17325,\n        \"samples\": [\n          1932.77001953125,\n          2000.7333984375,\n          1919.4127197265625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" FLOW OUT (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 17110,\n        \"samples\": [\n          16.371519088745117,\n          16.60078239440918,\n          16.81160545349121\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" TVA (SURFACE)\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 17374,\n        \"samples\": [\n          275.396728515625,\n          388.9776916503906,\n          551.6884765625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":297}]},{"cell_type":"code","source":["# Calculate reconstruction error for each sample\n","reconstruction_error = np.mean(np.abs(df_actual - df_reconstructed), axis=1)\n","reconstruction_error"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"ueymwhBC3RlU","executionInfo":{"status":"ok","timestamp":1723823341706,"user_tz":-60,"elapsed":20,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"48fc2c6b-021a-4070-c1fb-4212ac947817"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         13.073601\n","1         10.688079\n","2         23.204466\n","3         35.621218\n","4         37.700801\n","            ...    \n","17390    187.042116\n","17391    184.477381\n","17392    183.665191\n","17393    179.655361\n","17394    179.006514\n","Length: 17395, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>13.073601</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10.688079</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>23.204466</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>35.621218</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>37.700801</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>17390</th>\n","      <td>187.042116</td>\n","    </tr>\n","    <tr>\n","      <th>17391</th>\n","      <td>184.477381</td>\n","    </tr>\n","    <tr>\n","      <th>17392</th>\n","      <td>183.665191</td>\n","    </tr>\n","    <tr>\n","      <th>17393</th>\n","      <td>179.655361</td>\n","    </tr>\n","    <tr>\n","      <th>17394</th>\n","      <td>179.006514</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>17395 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":298}]},{"cell_type":"code","source":["# Set threshold as the 95th percentile of reconstruction errors\n","threshold = np.percentile(reconstruction_error, 95)"],"metadata":{"id":"eNemfAoc3TqO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Identify anomalies\n","anomalies = reconstruction_error > threshold"],"metadata":{"id":"ajcxWUXm3XHm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Get the actual and reconstructed data for the anomalies\n","df_anomalies_actual = df_actual[anomalies]\n","df_anomalies_reconstructed = df_reconstructed[anomalies]\n","\n","# Optionally, you can print or plot the anomalies\n","print(df_anomalies_actual)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VAXIrCZ63cEh","executionInfo":{"status":"ok","timestamp":1723823341706,"user_tz":-60,"elapsed":17,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"c7a7313b-8f83-455d-b373-24d37786791c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["        WOB (SURFACE)   BIT DEPTH (SURFACE)   ROP (SURFACE)  \\\n","2784               0.005000                 9118.381000             25.696667   \n","5859              12.538333                 9418.418000             24.433333   \n","11364            119.813333                 9838.390000              0.100000   \n","11368            119.813333                 9838.390000              0.100000   \n","11369              0.183333                 8192.613333             42.633333   \n","...                     ...                         ...                   ...   \n","17390              1.776667                 9772.161333             29.615000   \n","17391              0.581667                 9772.480833             16.603333   \n","17392              0.000000                 9772.851500             22.546667   \n","17393              0.000000                 9773.244667             23.805000   \n","17394              0.000000                 9773.543871             23.351613   \n","\n","        HOOKLOAD (SURFACE)   TORQUE (SURFACE)  \\\n","2784                  251.020000                 2.906983   \n","5859                  236.535000                 6.284717   \n","11364                 115.460000                 0.000000   \n","11368                 115.460000                 0.000000   \n","11369                 220.130000                 1.616517   \n","...                          ...                      ...   \n","17390                 202.886667                 2.256900   \n","17391                 204.165000                 2.093467   \n","17392                 205.506667                 1.953100   \n","17393                 205.900000                 1.983400   \n","17394                 205.267742                 2.053774   \n","\n","        SPP (SURFACE)   FLOW OUT (SURFACE)   TVA (SURFACE)  \n","2784            2252.488333                  16.633333            260.950000  \n","5859            1641.720000                  16.183333            258.733333  \n","11364           2756.700000                   0.000000            582.093333  \n","11368           2756.700000                   0.000000            582.093333  \n","11369            911.933333                  17.383333            224.553333  \n","...                     ...                        ...                   ...  \n","17390           2089.008333                  15.783333            158.235000  \n","17391           2088.306667                  15.933333            158.196667  \n","17392           2098.301667                  15.683333            158.165000  \n","17393           2083.573333                  15.766667            158.100000  \n","17394           2080.796774                  15.741935            159.483871  \n","\n","[870 rows x 8 columns]\n"]}]},{"cell_type":"code","source":["import numpy as np\n","from sklearn.metrics import mean_squared_error\n","from sklearn.preprocessing import MinMaxScaler\n","\n","# Assuming 'prediction_scaled' and 'actual_scaled' are your model's outputs (scaled data)\n","# Assuming 'scaler' is your fitted MinMaxScaler used for scaling the original data\n","# Reshape the predicted values to match the format for inverse transform\n","reconstructed = trainPredict.reshape((-1, X.shape[2]))\n","actual = X.reshape((-1, X.shape[2]))\n","\n","# Inverse transform the predicted values to get them back to the original scale\n","prediction_actual = scaler.inverse_transform(reconstructed)\n","actual_actual = scaler.inverse_transform(actual)\n","\n","# Calculate RMSE\n","rmse = np.sqrt(mean_squared_error(actual_actual, prediction_actual))\n","\n","print(f\"Root Mean Squared Error (RMSE): {rmse}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RaA97Yn7WOOF","executionInfo":{"status":"ok","timestamp":1723823341706,"user_tz":-60,"elapsed":13,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"899db2da-2d0a-4d45-8ecb-4223381d3fac"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Root Mean Squared Error (RMSE): 67.0386038502309\n"]}]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","# Step 1: Reconstruct the data using the trained autoencoder\n","X_reconstructed = autoencoder.predict(X)\n","\n","# Step 2: Calculate the reconstruction error for each data point\n","reconstruction_errors = np.mean(np.square(X - X_reconstructed), axis=1)\n","\n","# Step 3: Visualize the reconstruction error distribution\n","plt.figure(figsize=(10, 6))\n","plt.hist(reconstruction_errors, bins=50, alpha=0.75)\n","plt.xlabel('Reconstruction Error')\n","plt.ylabel('Number of Data Points')\n","plt.title('Reconstruction Error Distribution')\n","plt.show()\n","\n","# Step 4: Determine a threshold (e.g., 95th percentile)\n","threshold = np.percentile(reconstruction_errors, 98)\n","print(f\"Threshold for anomaly detection (98th percentile): {threshold}\")\n","\n","# Step 5: Classify data points as anomalies if their reconstruction error is above the threshold\n","predicted_anomalies = (reconstruction_errors > threshold).astype(int)\n","\n","# Step 6: Visualize the anomalies\n","plt.figure(figsize=(10, 6))\n","plt.plot(reconstruction_errors, label='Reconstruction Error')\n","plt.axhline(y=threshold, color='r', linestyle='--', label='Threshold')\n","plt.xlabel('Data Point Index')\n","plt.ylabel('Reconstruction Error')\n","plt.title('Reconstruction Error vs. Threshold')\n","plt.legend()\n","plt.show()\n","\n"],"metadata":{"id":"xXJofLgfWOs0","colab":{"base_uri":"https://localhost:8080/","height":1000},"collapsed":true,"executionInfo":{"status":"ok","timestamp":1723823344453,"user_tz":-60,"elapsed":2757,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"a15da284-4b70-4970-dd34-4fb4fc069098"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m109/109\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Threshold for anomaly detection (98th percentile): 0.018944013532718115\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Plot Actual_3 vs Predicted_3\n","plt.plot(df_actual[' SPP (SURFACE)'], label='Actual')\n","plt.plot(df_reconstructed[' SPP (SURFACE)'], label='Predicted')\n","\n","plt.xlabel('Index')\n","plt.ylabel('Values')\n","plt.title('Actual SPP vs Predicted SPP')\n","plt.legend()\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"ThGsvSq4lkwY","executionInfo":{"status":"ok","timestamp":1723823344453,"user_tz":-60,"elapsed":10,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"6aa55cc0-c447-4baa-ba93-a9fac1af16a7"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Reconstructing a paper for comparisons\n"],"metadata":{"id":"fwBoU5TZfhci"}},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow.keras.models import Model\n","from tensorflow.keras.layers import Input, LSTM, RepeatVector, TimeDistributed, Dense\n","\n","from keras.layers import Input, LSTM, Dense, RepeatVector, TimeDistributed, Dropout\n","from keras.models import Model\n","\n","X = create_sequences(data_scaled, 30)\n","\n","# Encoder\n","inputs = Input(shape=(30, n_features))\n","encoded = LSTM(128, return_sequences=True)(inputs)\n","encoded = LSTM(64)(encoded)\n","\n","# Latent Space\n","latent = RepeatVector(30)(encoded)\n","\n","# Decoder\n","decoded = LSTM(64, return_sequences=True)(latent)\n","decoded = LSTM(128, return_sequences=True)(decoded)\n","outputs = TimeDistributed(Dense(n_features))(decoded)\n","\n","# Model\n","autoencoder2 = Model(inputs, outputs)\n","autoencoder2.compile(optimizer='adam', loss='mse')\n"],"metadata":{"id":"nTBkBYmBfou7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Training\n","autoencoder2.fit(X, X, epochs=50, batch_size=64, validation_split=0.2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"id":"4LZcvnWgfxKT","executionInfo":{"status":"ok","timestamp":1723823390543,"user_tz":-60,"elapsed":46098,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"cd2d9c3c-93a3-4078-d983-b52809726049"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 29ms/step - loss: 0.1315 - val_loss: 0.0193\n","Epoch 2/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 16ms/step - loss: 0.0164 - val_loss: 0.0148\n","Epoch 3/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 13ms/step - loss: 0.0076 - val_loss: 0.0103\n","Epoch 4/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0040 - val_loss: 0.0072\n","Epoch 5/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0030 - val_loss: 0.0061\n","Epoch 6/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0024 - val_loss: 0.0058\n","Epoch 7/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0024 - val_loss: 0.0050\n","Epoch 8/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0023 - val_loss: 0.0052\n","Epoch 9/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 18ms/step - loss: 0.0022 - val_loss: 0.0058\n","Epoch 10/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 20ms/step - loss: 0.0022 - val_loss: 0.0055\n","Epoch 11/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 21ms/step - loss: 0.0022 - val_loss: 0.0058\n","Epoch 12/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0019 - val_loss: 0.0049\n","Epoch 13/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 13ms/step - loss: 0.0020 - val_loss: 0.0046\n","Epoch 14/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0020 - val_loss: 0.0048\n","Epoch 15/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0019 - val_loss: 0.0041\n","Epoch 16/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 13ms/step - loss: 0.0018 - val_loss: 0.0042\n","Epoch 17/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0018 - val_loss: 0.0043\n","Epoch 18/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 13ms/step - loss: 0.0017 - val_loss: 0.0040\n","Epoch 19/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0017 - val_loss: 0.0037\n","Epoch 20/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0019 - val_loss: 0.0036\n","Epoch 21/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 13ms/step - loss: 0.0017 - val_loss: 0.0039\n","Epoch 22/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0018 - val_loss: 0.0037\n","Epoch 23/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0018 - val_loss: 0.0042\n","Epoch 24/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0019 - val_loss: 0.0040\n","Epoch 25/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0015 - val_loss: 0.0035\n","Epoch 26/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 20ms/step - loss: 0.0017 - val_loss: 0.0035\n","Epoch 27/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 19ms/step - loss: 0.0018 - val_loss: 0.0037\n","Epoch 28/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 21ms/step - loss: 0.0016 - val_loss: 0.0042\n","Epoch 29/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0016 - val_loss: 0.0037\n","Epoch 30/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0016 - val_loss: 0.0042\n","Epoch 31/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0017 - val_loss: 0.0041\n","Epoch 32/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0015 - val_loss: 0.0047\n","Epoch 33/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 13ms/step - loss: 0.0057 - val_loss: 0.0051\n","Epoch 34/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0023 - val_loss: 0.0043\n","Epoch 35/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0019 - val_loss: 0.0044\n","Epoch 36/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0017 - val_loss: 0.0045\n","Epoch 37/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0018 - val_loss: 0.0042\n","Epoch 38/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 13ms/step - loss: 0.0016 - val_loss: 0.0041\n","Epoch 39/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0014 - val_loss: 0.0047\n","Epoch 40/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 15ms/step - loss: 0.0029 - val_loss: 0.0036\n","Epoch 41/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 15ms/step - loss: 0.0015 - val_loss: 0.0039\n","Epoch 42/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 21ms/step - loss: 0.0014 - val_loss: 0.0042\n","Epoch 43/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 20ms/step - loss: 0.0016 - val_loss: 0.0040\n","Epoch 44/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 15ms/step - loss: 0.0015 - val_loss: 0.0038\n","Epoch 45/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 13ms/step - loss: 0.0016 - val_loss: 0.0039\n","Epoch 46/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 13ms/step - loss: 0.0014 - val_loss: 0.0041\n","Epoch 47/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0014 - val_loss: 0.0039\n","Epoch 48/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 13ms/step - loss: 0.0014 - val_loss: 0.0040\n","Epoch 49/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 0.0014 - val_loss: 0.0042\n","Epoch 50/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 13ms/step - loss: 0.0013 - val_loss: 0.0038\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.history.History at 0x7d18cdced4b0>"]},"metadata":{},"execution_count":306}]},{"cell_type":"code","source":["# Evaluate\n","reconstructions = autoencoder2.predict(X)\n","mse = tf.keras.losses.MeanSquaredError()\n","reconstruction_error = mse(X, reconstructions)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bEnmG4_-fy0K","executionInfo":{"status":"ok","timestamp":1723823393091,"user_tz":-60,"elapsed":2553,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"e5a9942e-d836-4d8c-e58a-2b096180bd93"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m108/108\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 9ms/step\n"]}]},{"cell_type":"code","source":["import numpy as np\n","from sklearn.metrics import mean_squared_error\n","from sklearn.preprocessing import MinMaxScaler\n","\n","# Assuming 'prediction_scaled' and 'actual_scaled' are your model's outputs (scaled data)\n","# Assuming 'scaler' is your fitted MinMaxScaler used for scaling the original data\n","# Reshape the predicted values to match the format for inverse transform\n","reconstructed = reconstructions.reshape((-1, X.shape[2]))\n","actual = X.reshape((-1, X.shape[2]))\n","\n","# Inverse transform the predicted values to get them back to the original scale\n","prediction_actual = scaler.inverse_transform(reconstructed)\n","actual_actual = scaler.inverse_transform(actual)\n","\n","# Calculate RMSE\n","rmse = np.sqrt(mean_squared_error(actual_actual, prediction_actual))\n","\n","print(f\"Root Mean Squared Error (RMSE): {rmse}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z0BvmlkWhuqd","executionInfo":{"status":"ok","timestamp":1723823393092,"user_tz":-60,"elapsed":8,"user":{"displayName":"Nkosi Mate","userId":"06861193248796102138"}},"outputId":"2a7a0c44-9d13-4806-85db-b8a948856222"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Root Mean Squared Error (RMSE): 65.68971318069836\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"Zv1V5JXah12G"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"GPU","colab":{"gpuType":"T4","provenance":[{"file_id":"1cFLYdO-BFuEyX48TVtbYggzJwyB7sZbi","timestamp":1723643145813}],"collapsed_sections":["fwBoU5TZfhci"]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}
